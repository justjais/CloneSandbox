{"py/object": "ansible_risk_insight.findings.Findings", "metadata": {"type": "role", "name": "/Users/sjaiswal/Sumit/wisdom/botConfigRules/CloneSandbox/roles/run", "version": "", "source": null, "download_url": "", "hash": "", "time_records": {"scandata_init": {"begin": "2024-09-11T05:39:00.870924", "end": "2024-09-11T05:39:00.871045", "elapsed": 0.000121}, "metadata_load": {"begin": "2024-09-11T05:39:00.871048", "end": "2024-09-11T05:39:00.871051", "elapsed": 3e-06}, "dependency_load": {"begin": "2024-09-11T05:39:00.871053", "end": "2024-09-11T05:39:00.871055", "elapsed": 2e-06}, "prm_load": {"begin": "2024-09-11T05:39:00.871057", "end": "2024-09-11T05:39:00.871058", "elapsed": 1e-06}, "target_load": {"begin": "2024-09-11T05:39:00.871060", "end": "2024-09-11T05:39:00.871061", "elapsed": 1e-06}, "apply_spec_rules": {"begin": "2024-09-11T05:39:01.098391", "end": "2024-09-11T05:39:01.098398", "elapsed": 7e-06}, "tree_construction": {"begin": "2024-09-11T05:39:01.098404", "end": "2024-09-11T05:39:01.104384", "elapsed": 0.00598}, "variable_resolution": {"begin": "2024-09-11T05:39:01.104394", "end": "2024-09-11T05:39:01.105046", "elapsed": 0.000652}, "module_annotators": {"begin": "2024-09-11T05:39:01.105052", "end": "2024-09-11T05:39:01.105167", "elapsed": 0.000115}, "apply_rules": {"begin": "2024-09-11T05:39:01.105169", "end": "2024-09-11T05:39:01.179144", "elapsed": 0.073975}}}, "dependencies": [], "root_definitions": {"definitions": {"collections": [], "projects": [], "roles": [{"py/object": "ansible_risk_insight.models.Role", "type": "role", "key": "role role:run", "name": "run", "defined_in": "", "local_key": "role role:", "fqcn": "run", "metadata": {}, "collection": "", "playbooks": [], "taskfiles": ["taskfile role:run#taskfile:tasks/health_checks/eos.yaml", "taskfile role:run#taskfile:tasks/health_checks/ios.yaml", "taskfile role:run#taskfile:tasks/health_checks/iosxr.yaml", "taskfile role:run#taskfile:tasks/health_checks/junos.yaml", "taskfile role:run#taskfile:tasks/health_checks/nxos.yaml", "taskfile role:run#taskfile:tasks/health_checks/templates/eos_show_ip_bgp_summary.yaml", "taskfile role:run#taskfile:tasks/health_checks/templates/ios_show_bgp_summary.yaml", "taskfile role:run#taskfile:tasks/health_checks/templates/iosxr_show_bgp_neighbors.yaml", "taskfile role:run#taskfile:tasks/health_checks/templates/iosxr_show_bgp_summary.yaml", "taskfile role:run#taskfile:tasks/health_checks/templates/junos_show_bgp_summary.yaml", "taskfile role:run#taskfile:tasks/health_checks/templates/nxos_show_ip_bgp_summary.yaml", "taskfile role:run#taskfile:tasks/health_checks/templates/vyos_show_ip_bgp_summary.yaml", "taskfile role:run#taskfile:tasks/health_checks/vyos.yaml", "taskfile role:run#taskfile:tasks/includes/configure.yaml", "taskfile role:run#taskfile:tasks/includes/deploy.yaml", "taskfile role:run#taskfile:tasks/includes/detect.yaml", "taskfile role:run#taskfile:tasks/includes/gather.yaml", "taskfile role:run#taskfile:tasks/includes/health_check.yaml", "taskfile role:run#taskfile:tasks/includes/health_checks/eos.yaml", "taskfile role:run#taskfile:tasks/includes/health_checks/ios.yaml", "taskfile role:run#taskfile:tasks/includes/health_checks/iosxr.yaml", "taskfile role:run#taskfile:tasks/includes/health_checks/junos.yaml", "taskfile role:run#taskfile:tasks/includes/health_checks/nxos.yaml", "taskfile role:run#taskfile:tasks/includes/health_checks/templates/eos_show_ip_bgp_summary.yaml", "taskfile role:run#taskfile:tasks/includes/health_checks/templates/ios_show_bgp_summary.yaml", "taskfile role:run#taskfile:tasks/includes/health_checks/templates/iosxr_show_bgp_neighbors.yaml", "taskfile role:run#taskfile:tasks/includes/health_checks/templates/iosxr_show_bgp_summary.yaml", "taskfile role:run#taskfile:tasks/includes/health_checks/templates/junos_show_bgp_summary.yaml", "taskfile role:run#taskfile:tasks/includes/health_checks/templates/nxos_show_ip_bgp_summary.yaml", "taskfile role:run#taskfile:tasks/includes/health_checks/templates/vyos_show_ip_bgp_summary.yaml", "taskfile role:run#taskfile:tasks/includes/health_checks/vyos.yaml", "taskfile role:run#taskfile:tasks/includes/list.yaml", "taskfile role:run#taskfile:tasks/includes/persist.yaml", "taskfile role:run#taskfile:tasks/includes/remediate.yaml", "taskfile role:run#taskfile:tasks/includes/resources.yaml", "taskfile role:run#taskfile:tasks/main_cp.yml", "taskfile role:run#taskfile:tasks/test_play.yml"], "handlers": [{"py/object": "ansible_risk_insight.models.TaskFile", "type": "taskfile", "key": "taskfile role:run#taskfile:handlers/main.yml", "name": "main.yml", "defined_in": "handlers/main.yml", "local_key": "taskfile taskfile:handlers/main.yml", "tasks": [], "role": "run", "collection": "", "yaml_lines": null, "used_in": [], "annotations": {}, "variables": {}, "module_defaults": {}, "options": {}, "task_loading": {}}], "modules": [], "dependency": {}, "requirements": {}, "source": "", "annotations": {}, "default_variables": {}, "variables": {}, "loop": {}, "options": {}}], "taskfiles": [{"py/object": "ansible_risk_insight.models.TaskFile", "type": "taskfile", "key": "taskfile role:run#taskfile:tasks/main_cp.yml", "name": "main_cp.yml", "defined_in": "tasks/main_cp.yml", "local_key": "taskfile taskfile:tasks/main_cp.yml", "tasks": ["task role:run#taskfile:tasks/main_cp.yml#task:[0]"], "role": "run", "collection": "", "yaml_lines": "---\n- name: include tasks\n  ansible.builtin.include_tasks: includes/{{operation.name}}.yaml\n  loop: \"{{ operations }}\"\n  loop_control:\n    loop_var: operation\n", "used_in": [], "annotations": {}, "variables": {}, "module_defaults": {}, "options": {}, "task_loading": {"total": 1, "success": 1, "failure": 0, "errors": []}}, {"py/object": "ansible_risk_insight.models.TaskFile", "type": "taskfile", "key": "taskfile role:run#taskfile:tasks/test_play.yml", "name": "test_play.yml", "defined_in": "tasks/test_play.yml", "local_key": "taskfile taskfile:tasks/test_play.yml", "tasks": ["task role:run#taskfile:tasks/test_play.yml#task:[0]", "task role:run#taskfile:tasks/test_play.yml#task:[1]", "task role:run#taskfile:tasks/test_play.yml#task:[2]"], "role": "run", "collection": "", "yaml_lines": "---\n- name: Include tasks\n  include_tasks: includes/{{ operation.name }}.yaml\n  loop: \"{{ operations }}\"\n  loop_control:\n    loop_var: operation\n\n- name: Validate input provided by user\n  fail:\n    msg: username/password or cert_file/key_file or auth_token is mandatory\n  when:\n    - (username is not defined or password is not defined) and (cert_file is not defined or key_file is not defined) and (auth_token is not defined)\n\n- name: Fail when more than one valid authentication method is provided\n  fail:\n    msg: Only one authentication method is allowed. Provide either username/password or cert_file/key_file or auth_token.\n  when:\n    - ((username is defined or password is defined) and (cert_file is defined or key_file is defined) and auth_token is defined) or ((username is defined or password\n      is defined) and (cert_file is defined or key_file is defined)) or ((username is defined or password is defined) and auth_token is defined) or ((cert_file\n      is defined or key_file is defined) and auth_token is defined)\n", "used_in": [], "annotations": {}, "variables": {}, "module_defaults": {}, "options": {}, "task_loading": {"total": 3, "success": 3, "failure": 0, "errors": []}}, {"py/object": "ansible_risk_insight.models.TaskFile", "type": "taskfile", "key": "taskfile role:run#taskfile:tasks/includes/remediate.yaml", "name": "remediate.yaml", "defined_in": "tasks/includes/remediate.yaml", "local_key": "taskfile taskfile:tasks/includes/remediate.yaml", "tasks": ["task role:run#taskfile:tasks/includes/remediate.yaml#task:[0]", "task role:run#taskfile:tasks/includes/remediate.yaml#task:[1]"], "role": "run", "collection": "", "yaml_lines": "---\n- name: Resolve target resources\n  ansible.builtin.include_tasks: includes/resources.yaml\n\n- name: Invoke gather function\n  ansible.builtin.include_role:\n    name: network.base.resource_manager\n  vars:\n    operation: 'remediate'\n    state: 'replaced'\n    resources: \"{{ bgp_resources }}\"\n", "used_in": [], "annotations": {}, "variables": {}, "module_defaults": {}, "options": {}, "task_loading": {"total": 2, "success": 2, "failure": 0, "errors": []}}, {"py/object": "ansible_risk_insight.models.TaskFile", "type": "taskfile", "key": "taskfile role:run#taskfile:tasks/includes/resources.yaml", "name": "resources.yaml", "defined_in": "tasks/includes/resources.yaml", "local_key": "taskfile taskfile:tasks/includes/resources.yaml", "tasks": ["task role:run#taskfile:tasks/includes/resources.yaml#task:[0]", "task role:run#taskfile:tasks/includes/resources.yaml#task:[1]"], "role": "run", "collection": "", "yaml_lines": "---\n- name: Set resources\n  ansible.builtin.set_fact:\n    bgp_resources:\n      - 'bgp_global'\n      - 'bgp_address_family'\n      - 'bgp_neighbor_address_family'\n  when: ansible_network_os == 'cisco.nxos.nxos'\n\n- name: Set resources\n  ansible.builtin.set_fact:\n    bgp_resources:\n      - 'bgp_global'\n      - 'bgp_address_family'\n  when: ansible_network_os != 'cisco.nxos.nxos'\n", "used_in": [], "annotations": {}, "variables": {}, "module_defaults": {}, "options": {}, "task_loading": {"total": 2, "success": 2, "failure": 0, "errors": []}}, {"py/object": "ansible_risk_insight.models.TaskFile", "type": "taskfile", "key": "taskfile role:run#taskfile:tasks/includes/deploy.yaml", "name": "deploy.yaml", "defined_in": "tasks/includes/deploy.yaml", "local_key": "taskfile taskfile:tasks/includes/deploy.yaml", "tasks": ["task role:run#taskfile:tasks/includes/deploy.yaml#task:[0]", "task role:run#taskfile:tasks/includes/deploy.yaml#task:[1]"], "role": "run", "collection": "", "yaml_lines": "---\n- name: Resolve target resources\n  ansible.builtin.include_tasks: includes/resources.yaml\n\n- name: Invoke deploy function\n  ansible.builtin.include_role:\n    name: network.base.resource_manager\n  vars:\n    operation: 'deploy'\n    resources: \"{{ bgp_resources }}\"\n", "used_in": [], "annotations": {}, "variables": {}, "module_defaults": {}, "options": {}, "task_loading": {"total": 2, "success": 2, "failure": 0, "errors": []}}, {"py/object": "ansible_risk_insight.models.TaskFile", "type": "taskfile", "key": "taskfile role:run#taskfile:tasks/includes/configure.yaml", "name": "configure.yaml", "defined_in": "tasks/includes/configure.yaml", "local_key": "taskfile taskfile:tasks/includes/configure.yaml", "tasks": ["task role:run#taskfile:tasks/includes/configure.yaml#task:[0]"], "role": "run", "collection": "", "yaml_lines": "---\n- name: Invoke configure function\n  include_role:\n    name: network.base.resource_manager\n  vars:\n    operation: 'configure'\n", "used_in": [], "annotations": {}, "variables": {}, "module_defaults": {}, "options": {}, "task_loading": {"total": 1, "success": 1, "failure": 0, "errors": []}}, {"py/object": "ansible_risk_insight.models.TaskFile", "type": "taskfile", "key": "taskfile role:run#taskfile:tasks/includes/persist.yaml", "name": "persist.yaml", "defined_in": "tasks/includes/persist.yaml", "local_key": "taskfile taskfile:tasks/includes/persist.yaml", "tasks": ["task role:run#taskfile:tasks/includes/persist.yaml#task:[0]", "task role:run#taskfile:tasks/includes/persist.yaml#task:[1]"], "role": "run", "collection": "", "yaml_lines": "---\n- name: Resolve target resources\n  ansible.builtin.include_tasks: includes/resources.yaml\n\n- name: Invoke gather function\n  ansible.builtin.include_role:\n    name: network.base.resource_manager\n  vars:\n    operation: 'persist'\n    resources: \"{{ bgp_resources }}\"\n    ignore_empty: \"{{ persist_empty | default(true) }}\"\n", "used_in": [], "annotations": {}, "variables": {}, "module_defaults": {}, "options": {}, "task_loading": {"total": 2, "success": 2, "failure": 0, "errors": []}}, {"py/object": "ansible_risk_insight.models.TaskFile", "type": "taskfile", "key": "taskfile role:run#taskfile:tasks/includes/gather.yaml", "name": "gather.yaml", "defined_in": "tasks/includes/gather.yaml", "local_key": "taskfile taskfile:tasks/includes/gather.yaml", "tasks": ["task role:run#taskfile:tasks/includes/gather.yaml#task:[0]", "task role:run#taskfile:tasks/includes/gather.yaml#task:[1]"], "role": "run", "collection": "", "yaml_lines": "---\n- name: Resolve target resources\n  ansible.builtin.include_tasks: includes/resources.yaml\n\n- name: Invoke gather function\n  include_role:\n    name: network.base.resource_manager\n  vars:\n    operation: 'gather'\n    resources: \"{{ bgp_resources }}\"\n", "used_in": [], "annotations": {}, "variables": {}, "module_defaults": {}, "options": {}, "task_loading": {"total": 2, "success": 2, "failure": 0, "errors": []}}, {"py/object": "ansible_risk_insight.models.TaskFile", "type": "taskfile", "key": "taskfile role:run#taskfile:tasks/includes/detect.yaml", "name": "detect.yaml", "defined_in": "tasks/includes/detect.yaml", "local_key": "taskfile taskfile:tasks/includes/detect.yaml", "tasks": ["task role:run#taskfile:tasks/includes/detect.yaml#task:[0]", "task role:run#taskfile:tasks/includes/detect.yaml#task:[1]"], "role": "run", "collection": "", "yaml_lines": "---\n- name: Resolve target resources\n  ansible.builtin.include_tasks: includes/resources.yaml\n\n- name: Invoke detect function\n  ansible.builtin.include_role:\n    name: network.base.resource_manager\n  vars:\n    operation: 'detect'\n    state: 'replaced'\n    resources: \"{{ bgp_resources }}\"\n", "used_in": [], "annotations": {}, "variables": {}, "module_defaults": {}, "options": {}, "task_loading": {"total": 2, "success": 2, "failure": 0, "errors": []}}, {"py/object": "ansible_risk_insight.models.TaskFile", "type": "taskfile", "key": "taskfile role:run#taskfile:tasks/includes/list.yaml", "name": "list.yaml", "defined_in": "tasks/includes/list.yaml", "local_key": "taskfile taskfile:tasks/includes/list.yaml", "tasks": ["task role:run#taskfile:tasks/includes/list.yaml#task:[0]"], "role": "run", "collection": "", "yaml_lines": "---\n- name: Invoke list function\n  ansible.builtin.include_role:\n    name: network.base.resource_manager\n  vars:\n    operation: 'list'\n", "used_in": [], "annotations": {}, "variables": {}, "module_defaults": {}, "options": {}, "task_loading": {"total": 1, "success": 1, "failure": 0, "errors": []}}, {"py/object": "ansible_risk_insight.models.TaskFile", "type": "taskfile", "key": "taskfile role:run#taskfile:tasks/includes/health_check.yaml", "name": "health_check.yaml", "defined_in": "tasks/includes/health_check.yaml", "local_key": "taskfile taskfile:tasks/includes/health_check.yaml", "tasks": ["task role:run#taskfile:tasks/includes/health_check.yaml#task:[0]", "task role:run#taskfile:tasks/includes/health_check.yaml#task:[1]", "task role:run#taskfile:tasks/includes/health_check.yaml#task:[2]"], "role": "run", "collection": "", "yaml_lines": "---\n- name: Include tasks\n  ansible.builtin.include_tasks: ./health_checks/{{ ansible_network_os.split('.')[2] }}.yaml\n\n- name: Set health checks fact\n  ansible.builtin.set_fact:\n     health_checks: \"{{ bgp_health | network.bgp.health_check_view(operation) }}\"\n\n- name: BGP health checks\n  debug:\n     var: health_checks\n  failed_when: \"'unsuccessful' == health_checks.status\"\n", "used_in": [], "annotations": {}, "variables": {}, "module_defaults": {}, "options": {}, "task_loading": {"total": 3, "success": 3, "failure": 0, "errors": []}}, {"py/object": "ansible_risk_insight.models.TaskFile", "type": "taskfile", "key": "taskfile role:run#taskfile:tasks/includes/health_checks/iosxr.yaml", "name": "iosxr.yaml", "defined_in": "tasks/includes/health_checks/iosxr.yaml", "local_key": "taskfile taskfile:tasks/includes/health_checks/iosxr.yaml", "tasks": ["task role:run#taskfile:tasks/includes/health_checks/iosxr.yaml#task:[0]"], "role": "run", "collection": "", "yaml_lines": "---\n- name: Parse bgp summary\n  cli_parse:\n    command: \"show bgp summary\"\n    parser:\n      name: ansible.netcommon.content_templates\n    set_fact: bgp_health\n", "used_in": [], "annotations": {}, "variables": {}, "module_defaults": {}, "options": {}, "task_loading": {"total": 1, "success": 1, "failure": 0, "errors": []}}, {"py/object": "ansible_risk_insight.models.TaskFile", "type": "taskfile", "key": "taskfile role:run#taskfile:tasks/includes/health_checks/nxos.yaml", "name": "nxos.yaml", "defined_in": "tasks/includes/health_checks/nxos.yaml", "local_key": "taskfile taskfile:tasks/includes/health_checks/nxos.yaml", "tasks": ["task role:run#taskfile:tasks/includes/health_checks/nxos.yaml#task:[0]"], "role": "run", "collection": "", "yaml_lines": "---\n- name: Parse bgp summary\n  ansible.utils.cli_parse:\n    command: \"show ip bgp summary\"\n    parser:\n      name: ansible.netcommon.content_templates\n    set_fact: bgp_health\n", "used_in": [], "annotations": {}, "variables": {}, "module_defaults": {}, "options": {}, "task_loading": {"total": 1, "success": 1, "failure": 0, "errors": []}}, {"py/object": "ansible_risk_insight.models.TaskFile", "type": "taskfile", "key": "taskfile role:run#taskfile:tasks/includes/health_checks/junos.yaml", "name": "junos.yaml", "defined_in": "tasks/includes/health_checks/junos.yaml", "local_key": "taskfile taskfile:tasks/includes/health_checks/junos.yaml", "tasks": ["task role:run#taskfile:tasks/includes/health_checks/junos.yaml#task:[0]", "task role:run#taskfile:tasks/includes/health_checks/junos.yaml#task:[1]"], "role": "run", "collection": "", "yaml_lines": "---\n- name: Parse bgp summary\n  ansible.utils.cli_parse:\n    command: \"show bgp summary\"\n    parser:\n      name: ansible.netcommon.content_templates\n    set_fact: bgp_health\n\n\n- name: Show Summary facts\n  debug:\n    msg: \"{{ bgp_health }}\"\n", "used_in": [], "annotations": {}, "variables": {}, "module_defaults": {}, "options": {}, "task_loading": {"total": 2, "success": 2, "failure": 0, "errors": []}}, {"py/object": "ansible_risk_insight.models.TaskFile", "type": "taskfile", "key": "taskfile role:run#taskfile:tasks/includes/health_checks/vyos.yaml", "name": "vyos.yaml", "defined_in": "tasks/includes/health_checks/vyos.yaml", "local_key": "taskfile taskfile:tasks/includes/health_checks/vyos.yaml", "tasks": ["task role:run#taskfile:tasks/includes/health_checks/vyos.yaml#task:[0]"], "role": "run", "collection": "", "yaml_lines": "---\n- name: Parse bgp summary\n  cli_parse:\n    command: \"show ip bgp summary\"\n    parser:\n      name: ansible.netcommon.content_templates\n    set_fact: bgp_health\n", "used_in": [], "annotations": {}, "variables": {}, "module_defaults": {}, "options": {}, "task_loading": {"total": 1, "success": 1, "failure": 0, "errors": []}}, {"py/object": "ansible_risk_insight.models.TaskFile", "type": "taskfile", "key": "taskfile role:run#taskfile:tasks/includes/health_checks/ios.yaml", "name": "ios.yaml", "defined_in": "tasks/includes/health_checks/ios.yaml", "local_key": "taskfile taskfile:tasks/includes/health_checks/ios.yaml", "tasks": ["task role:run#taskfile:tasks/includes/health_checks/ios.yaml#task:[0]"], "role": "run", "collection": "", "yaml_lines": "---\n- name: Parse bgp summary\n  ansible.utils.cli_parse:\n    command: \"show bgp summary\"\n    parser:\n      name: ansible.netcommon.content_templates\n    set_fact: bgp_health\n", "used_in": [], "annotations": {}, "variables": {}, "module_defaults": {}, "options": {}, "task_loading": {"total": 1, "success": 1, "failure": 0, "errors": []}}, {"py/object": "ansible_risk_insight.models.TaskFile", "type": "taskfile", "key": "taskfile role:run#taskfile:tasks/includes/health_checks/eos.yaml", "name": "eos.yaml", "defined_in": "tasks/includes/health_checks/eos.yaml", "local_key": "taskfile taskfile:tasks/includes/health_checks/eos.yaml", "tasks": ["task role:run#taskfile:tasks/includes/health_checks/eos.yaml#task:[0]"], "role": "run", "collection": "", "yaml_lines": "---\n- name: Parse bgp summary\n  cli_parse:\n    command: \"show ip bgp summary\"\n    parser:\n      name: ansible.netcommon.content_templates\n    set_fact: bgp_health\n", "used_in": [], "annotations": {}, "variables": {}, "module_defaults": {}, "options": {}, "task_loading": {"total": 1, "success": 1, "failure": 0, "errors": []}}, {"py/object": "ansible_risk_insight.models.TaskFile", "type": "taskfile", "key": "taskfile role:run#taskfile:tasks/includes/health_checks/templates/iosxr_show_bgp_summary.yaml", "name": "iosxr_show_bgp_summary.yaml", "defined_in": "tasks/includes/health_checks/templates/iosxr_show_bgp_summary.yaml", "local_key": "taskfile taskfile:tasks/includes/health_checks/templates/iosxr_show_bgp_summary.yaml", "tasks": ["task role:run#taskfile:tasks/includes/health_checks/templates/iosxr_show_bgp_summary.yaml#task:[0]", "task role:run#taskfile:tasks/includes/health_checks/templates/iosxr_show_bgp_summary.yaml#task:[1]", "task role:run#taskfile:tasks/includes/health_checks/templates/iosxr_show_bgp_summary.yaml#task:[2]", "task role:run#taskfile:tasks/includes/health_checks/templates/iosxr_show_bgp_summary.yaml#task:[3]", "task role:run#taskfile:tasks/includes/health_checks/templates/iosxr_show_bgp_summary.yaml#task:[4]", "task role:run#taskfile:tasks/includes/health_checks/templates/iosxr_show_bgp_summary.yaml#task:[5]", "task role:run#taskfile:tasks/includes/health_checks/templates/iosxr_show_bgp_summary.yaml#task:[6]"], "role": "run", "collection": "", "yaml_lines": "# fmt: off\n[\n  {\n    \"name\": \"router_id\",\n    \"getval\": '''BGP router identifier\\s(?P<router_id>\\S+),\\slocal AS number\\s(?P<local_as>\\d+)$''',\n    \"result\": {\n    \"router_id\": \"{{ router_id }}\",\n    \"local_as\": \"{{ local_as }}\"\n    }\n  },\n  {\n    \"name\": \"generic_scan_interval\",\n    \"getval\": '''BGP gerneric scan interval\\s(?P<scan_interval>\\d+)$''',\n    \"result\": {\n      \"generic_scan_interval\": \"{{ scan_interval}}\"\n    }\n  },\n\n  {\n    \"name\": \"non_stop_routing\",\n    \"getval\": '''Non-stop routing is\\s(?P<non_stop_routing>\\S+)$''',\n    \"result\":{\n      \"non_stop_routing\": \"{{ non_stop_routing }}\"\n    }\n  },\n\n  {\n    \"name\": \"bgp_table_version\",\n    \"getval\": '''BGP table version is\\s(?P<table_version>\\d+),(.*)(?P<route_table_version>\\d+)''',\n    \"result\": {\n      \"bgp_table_version\": \"{{ table_version }}\",\n      \"route_table_version\": \"{{ route_table_version }}\"\n    }\n  },\n\n  {\n    \"name\": \"bgp_table_state\",\n    \"getval\": '''BGP table state:\\s(?P<table_state>\\S+)$''',\n    \"result\": {\n      \"bgp_table_state\": \"{{ table_state }}\",\n    }\n  },\n\n  {\n    \"name\": \"path_memory_usage\",\n    \"getval\": '''(?P<total_entries>\\d+)\\snetwork entries using(\\s(?P<memory_usage>\\d+))''',\n    \"result\": {\n      \"path\": {\n        \"memory_usage\": \"{{ memory_usage }}\",\n        \"total_entries\": \"{{ total_entries }}\",\n      }\n    }\n  },\n\n  {\n    \"name\": \"neighbors\",\n    \"getval\": '''^(?P<peer>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\s+(?P<version>\\d+)\\s+(?P<peer_as>\\d+)\\s+(?P<msg_rcvd>\\d+)\\s+(?P<msg_sent>\\d+)\\s+(?P<bgp_table_version>\\d+)\\s+(?P<input_queue>\\d+)\\s+(?P<output_queue>\\d+)\\s+(?P<uptime>\\S+)\\s+(?P<peer_state>\\S+)''',\n    \"result\": {\n      \"neighbors\": [\n      {\n        \"peer\": \"{{ peer }}\",\n        \"version\": \"{{ version }}\",\n        \"peer_as\": \"{{ peer_as }}\",\n        \"msg_rcvd\": \"{{ msg_rcvd }}\",\n        \"msg_sent\": \"{{ msg_sent }}\",\n        \"bgp_table_version\": \"{{ bgp_table_version }}\",\n        \"input_queue\": \"{{ input_queue }}\",\n        \"output_queue\": \"{{ output_queue }}\",\n        \"uptime\": \"{{ uptime }}\",\n        \"peer_state\": \"{{ peer_state }}\",\n      }\n      ]\n    }\n  }\n\n]\n# fmt: on\n", "used_in": [], "annotations": {}, "variables": {}, "module_defaults": {}, "options": {}, "task_loading": {"total": 7, "success": 7, "failure": 0, "errors": []}}, {"py/object": "ansible_risk_insight.models.TaskFile", "type": "taskfile", "key": "taskfile role:run#taskfile:tasks/includes/health_checks/templates/eos_show_ip_bgp_summary.yaml", "name": "eos_show_ip_bgp_summary.yaml", "defined_in": "tasks/includes/health_checks/templates/eos_show_ip_bgp_summary.yaml", "local_key": "taskfile taskfile:tasks/includes/health_checks/templates/eos_show_ip_bgp_summary.yaml", "tasks": ["task role:run#taskfile:tasks/includes/health_checks/templates/eos_show_ip_bgp_summary.yaml#task:[0]", "task role:run#taskfile:tasks/includes/health_checks/templates/eos_show_ip_bgp_summary.yaml#task:[1]", "task role:run#taskfile:tasks/includes/health_checks/templates/eos_show_ip_bgp_summary.yaml#task:[2]", "task role:run#taskfile:tasks/includes/health_checks/templates/eos_show_ip_bgp_summary.yaml#task:[3]"], "role": "run", "collection": "", "yaml_lines": "# fmt: off\n[\n    {\n        \"name\": \"router_id\",\n        \"getval\": '''BGP router identifier\\s(?P<router_id>\\S+),\\slocal AS number\\s(?P<local_as>\\d+)$''',\n        \"result\": {\n            \"router_id\": \"{{ router_id }}\",\n            \"local_as\": \"{{ local_as }}\"\n        }\n    },\n    {\n        \"name\": \"bgp_table_version\",\n        \"getval\": '''BGP table version is\\s(?P<table_version>\\d+),(.*)(?P<route_table_version>\\d+)''',\n        \"result\": {\n            \"bgp_table_version\": \"{{ table_version }}\",\n            \"route_table_version\": \"{{ route_table_version }}\"\n        }\n    },\n    {\n        \"name\": \"path_memory_usage\",\n        \"getval\": '''(?P<total_entries>\\d+)\\snetwork entries using(\\s(?P<memory_usage>\\d+))''',\n        \"result\": {\n            \"path\": {\n                \"memory_usage\": \"{{ memory_usage }}\",\n                \"total_entries\": \"{{ total_entries }}\",\n            }\n        }\n    },\n    {\n        \"name\": \"neighbors\",\n        \"getval\": '''^(?P<peer>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\s+(?P<version>\\d+)\\s+(?P<peer_as>\\d+)\\s+(?P<msg_rcvd>\\d+)\\s+(?P<msg_sent>\\d+)\\s+(?P<bgp_table_version>\\d+)\\s+(?P<input_queue>\\d+)\\s+(?P<output_queue>\\d+)\\s+(?P<uptime>\\S+)\\s+(?P<peer_state>\\S+)''',\n        \"result\": {\n            \"neighbors\": [\n            {\n            \"peer\": \"{{ peer }}\",\n            \"version\": \"{{ version }}\",\n            \"peer_as\": \"{{ peer_as }}\",\n            \"msg_rcvd\": \"{{ msg_rcvd }}\",\n            \"msg_sent\": \"{{ msg_sent }}\",\n            \"bgp_table_version\": \"{{ bgp_table_version }}\",\n            \"input_queue\": \"{{ input_queue }}\",\n            \"output_queue\": \"{{ output_queue }}\",\n            \"uptime\": \"{{ uptime }}\",\n            \"peer_state\": \"{{ peer_state }}\",\n            }\n            ]\n        }\n    }\n]\n # fmt: on\n", "used_in": [], "annotations": {}, "variables": {}, "module_defaults": {}, "options": {}, "task_loading": {"total": 4, "success": 4, "failure": 0, "errors": []}}, {"py/object": "ansible_risk_insight.models.TaskFile", "type": "taskfile", "key": "taskfile role:run#taskfile:tasks/includes/health_checks/templates/junos_show_bgp_summary.yaml", "name": "junos_show_bgp_summary.yaml", "defined_in": "tasks/includes/health_checks/templates/junos_show_bgp_summary.yaml", "local_key": "taskfile taskfile:tasks/includes/health_checks/templates/junos_show_bgp_summary.yaml", "tasks": ["task role:run#taskfile:tasks/includes/health_checks/templates/junos_show_bgp_summary.yaml#task:[0]", "task role:run#taskfile:tasks/includes/health_checks/templates/junos_show_bgp_summary.yaml#task:[1]", "task role:run#taskfile:tasks/includes/health_checks/templates/junos_show_bgp_summary.yaml#task:[2]", "task role:run#taskfile:tasks/includes/health_checks/templates/junos_show_bgp_summary.yaml#task:[3]"], "role": "run", "collection": "", "yaml_lines": "# fmt: off\n[\n    {\n        \"name\": \"router_id\",\n        \"getval\": '''BGP router identifier\\s(?P<router_id>\\S+),\\slocal AS number\\s(?P<local_as>\\d+)''',\n        \"result\": {\n            \"router_id\": \"{{ router_id }}\",\n            \"local_as\": \"{{ local_as }}\"\n        }\n    },\n    {\n        \"name\": \"bgp_table_version\",\n        \"getval\": '''BGP table version is\\s(?P<table_version>\\d+),(.*)(?P<route_table_version>\\d+)''',\n        \"result\": {\n            \"bgp_table_version\": \"{{ table_version }}\",\n            \"rout_table_version\": \"{{ route_table_version }}\"\n        }\n    },\n    {\n        \"name\": \"path_memory_usage\",\n        \"getval\": '''(?P<total_entries>\\d+)\\snetwork entries using(\\s(?P<memory_usage>\\d+))''',\n        \"result\": {\n            \"path\": {\n                \"memory_usage\": \"{{ memory_usage }}\",\n                \"total_entries\": \"{{ total_entries }}\",\n            }\n        }\n    },\n    {\n        \"name\": \"neighbors\",\n        \"getval\": '''^(?P<peer>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\s+(?P<peer_as>\\d+)\\s+(?P<msg_rcvd>\\d+)\\s+(?P<msg_sent>\\d+)\\s+(?P<output_queue>\\d+)\\s+(?P<flaps>\\d+)\\s+(?P<uptime>\\S+)\\s+(?P<peer_state>\\S+)''',\n        \"result\": {\n            \"neighbors\": [\n            {\n            \"peer\": \"{{ peer }}\",\n            \"peer_as\": \"{{ peer_as }}\",\n            \"msg_rcvd\": \"{{ msg_rcvd }}\",\n            \"msg_sent\": \"{{ msg_sent }}\",\n            \"output_queue\": \"{{ output_queue }}\",\n            \"uptime\": \"{{ uptime }}\",\n            \"flaps\": \"{{ flaps }}\",\n            \"peer_state\": \"{{ peer_state }}\",\n            }\n            ]\n        }\n    }\n]\n# fmt: on\n", "used_in": [], "annotations": {}, "variables": {}, "module_defaults": {}, "options": {}, "task_loading": {"total": 4, "success": 4, "failure": 0, "errors": []}}, {"py/object": "ansible_risk_insight.models.TaskFile", "type": "taskfile", "key": "taskfile role:run#taskfile:tasks/includes/health_checks/templates/ios_show_bgp_summary.yaml", "name": "ios_show_bgp_summary.yaml", "defined_in": "tasks/includes/health_checks/templates/ios_show_bgp_summary.yaml", "local_key": "taskfile taskfile:tasks/includes/health_checks/templates/ios_show_bgp_summary.yaml", "tasks": ["task role:run#taskfile:tasks/includes/health_checks/templates/ios_show_bgp_summary.yaml#task:[0]", "task role:run#taskfile:tasks/includes/health_checks/templates/ios_show_bgp_summary.yaml#task:[1]", "task role:run#taskfile:tasks/includes/health_checks/templates/ios_show_bgp_summary.yaml#task:[2]", "task role:run#taskfile:tasks/includes/health_checks/templates/ios_show_bgp_summary.yaml#task:[3]"], "role": "run", "collection": "", "yaml_lines": "# fmt: off\n[\n    {\n        \"name\": \"router_id\",\n        \"getval\": '''BGP router identifier\\s(?P<router_id>\\S+),\\slocal AS number\\s(?P<local_as>\\d+)$''',\n        \"result\": {\n            \"router_id\": \"{{ router_id }}\",\n            \"local_as\": \"{{ local_as }}\"\n        }\n    },\n    {\n        \"name\": \"bgp_table_version\",\n        \"getval\": '''BGP table version is\\s(?P<table_version>\\d+),(.*)(?P<route_table_version>\\d+)''',\n        \"result\": {\n            \"bgp_table_version\": \"{{ table_version }}\",\n            \"route_table_version\": \"{{ route_table_version }}\"\n        }\n    },\n    {\n        \"name\": \"path_memory_usage\",\n        \"getval\": '''(?P<total_entries>\\d+)\\snetwork entries using(\\s(?P<memory_usage>\\d+))''',\n        \"result\": {\n            \"path\": {\n                \"memory_usage\": \"{{ memory_usage }}\",\n                \"total_entries\": \"{{ total_entries }}\",\n            }\n        }\n    },\n    {\n        \"name\": \"neighbors\",\n        \"getval\": '''^(?P<peer>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\s+(?P<version>\\d+)\\s+(?P<peer_as>\\d+)\\s+(?P<msg_rcvd>\\d+)\\s+(?P<msg_sent>\\d+)\\s+(?P<bgp_table_version>\\d+)\\s+(?P<input_queue>\\d+)\\s+(?P<output_queue>\\d+)\\s+(?P<uptime>\\S+)\\s+(?P<peer_state>\\S+)''',\n        \"result\": {\n            \"neighbors\": [\n            {\n            \"peer\": \"{{ peer }}\",\n            \"version\": \"{{ version }}\",\n            \"peer_as\": \"{{ peer_as }}\",\n            \"msg_rcvd\": \"{{ msg_rcvd }}\",\n            \"msg_sent\": \"{{ msg_sent }}\",\n            \"bgp_table_version\": \"{{ bgp_table_version }}\",\n            \"input_queue\": \"{{ input_queue }}\",\n            \"output_queue\": \"{{ output_queue }}\",\n            \"uptime\": \"{{ uptime }}\",\n            \"peer_state\": \"{{ peer_state }}\",\n            }\n            ]\n        }\n    }\n]\n # fmt: on\n", "used_in": [], "annotations": {}, "variables": {}, "module_defaults": {}, "options": {}, "task_loading": {"total": 4, "success": 4, "failure": 0, "errors": []}}, {"py/object": "ansible_risk_insight.models.TaskFile", "type": "taskfile", "key": "taskfile role:run#taskfile:tasks/includes/health_checks/templates/nxos_show_ip_bgp_summary.yaml", "name": "nxos_show_ip_bgp_summary.yaml", "defined_in": "tasks/includes/health_checks/templates/nxos_show_ip_bgp_summary.yaml", "local_key": "taskfile taskfile:tasks/includes/health_checks/templates/nxos_show_ip_bgp_summary.yaml", "tasks": ["task role:run#taskfile:tasks/includes/health_checks/templates/nxos_show_ip_bgp_summary.yaml#task:[0]"], "role": "run", "collection": "", "yaml_lines": "# fmt: off\n[\n    {\n      \"name\": \"neighbors\",\n      \"getval\": '''^(?P<peer>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\s+(?P<version>\\d+)\\s+(?P<peer_as>\\d+)\\s+(?P<msg_rcvd>\\d+)\\s+(?P<msg_sent>\\d+)\\s+(?P<bgp_table_version>\\d+)\\s+(?P<input_queue>\\d+)\\s+(?P<output_queue>\\d+)\\s+(?P<uptime>\\S+)\\s+(?P<peer_state>\\S+)''',\n      \"result\": {\n        \"neighbors\": [\n        {\n          \"peer\": \"{{ peer }}\",\n          \"version\": \"{{ version }}\",\n          \"peer_as\": \"{{ peer_as }}\",\n          \"msg_rcvd\": \"{{ msg_rcvd }}\",\n          \"msg_sent\": \"{{ msg_sent }}\",\n          \"bgp_table_version\": \"{{ bgp_table_version }}\",\n          \"input_queue\": \"{{ input_queue }}\",\n          \"output_queue\": \"{{ output_queue }}\",\n          \"uptime\": \"{{ uptime }}\",\n          \"peer_state\": \"{{ peer_state }}\",\n        }\n        ]\n      }\n    }\n]\n # fmt: on\n", "used_in": [], "annotations": {}, "variables": {}, "module_defaults": {}, "options": {}, "task_loading": {"total": 1, "success": 1, "failure": 0, "errors": []}}, {"py/object": "ansible_risk_insight.models.TaskFile", "type": "taskfile", "key": "taskfile role:run#taskfile:tasks/includes/health_checks/templates/vyos_show_ip_bgp_summary.yaml", "name": "vyos_show_ip_bgp_summary.yaml", "defined_in": "tasks/includes/health_checks/templates/vyos_show_ip_bgp_summary.yaml", "local_key": "taskfile taskfile:tasks/includes/health_checks/templates/vyos_show_ip_bgp_summary.yaml", "tasks": ["task role:run#taskfile:tasks/includes/health_checks/templates/vyos_show_ip_bgp_summary.yaml#task:[0]", "task role:run#taskfile:tasks/includes/health_checks/templates/vyos_show_ip_bgp_summary.yaml#task:[1]", "task role:run#taskfile:tasks/includes/health_checks/templates/vyos_show_ip_bgp_summary.yaml#task:[2]"], "role": "run", "collection": "", "yaml_lines": "# fmt: off\n[\n  {\n    \"name\": \"router_id\",\n    \"getval\": '''^BGP router identifier\\s(?P<router_id>\\S+),\\slocal AS number\\s(?P<local_as>\\d+)$''',\n    \"result\": {\n    \"router_id\": \"{{ router_id }}\",\n    \"local_as\": \"{{ local_as }}\"\n    }\n  },\n  {\n    \"name\": \"path_memory_usage\",\n    \"getval\": '''^Peers\\s(?P<total_entries>\\d+),\\susing\\s(?P<memory_usage>\\S+)''',\n    \"result\": {\n      \"path\": {\n        \"memory_usage\": \"{{ memory_usage }}\",\n        \"total_entries\": \"{{ total_entries }}\",\n      }\n    }\n  },\n  {\n    \"name\": \"neighbors\",\n    \"getval\": '''^(?P<peer>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\s+(?P<version>\\d+)\\s+(?P<peer_as>\\d+)\\s+(?P<msg_rcvd>\\d+)\\s+(?P<msg_sent>\\d+)\\s+(?P<bgp_table_version>\\d+)\\s+(?P<input_queue>\\d+)\\s+(?P<output_queue>\\d+)\\s+(?P<uptime>\\S+)\\s+(?P<peer_state>\\S+)''',\n    \"result\": {\n      \"neighbors\": [\n      {\n        \"peer\": \"{{ peer }}\",\n        \"version\": \"{{ version }}\",\n        \"peer_as\": \"{{ peer_as }}\",\n        \"msg_rcvd\": \"{{ msg_rcvd }}\",\n        \"msg_sent\": \"{{ msg_sent }}\",\n        \"bgp_table_version\": \"{{ bgp_table_version }}\",\n        \"input_queue\": \"{{ input_queue }}\",\n        \"output_queue\": \"{{ output_queue }}\",\n        \"uptime\": \"{{ uptime }}\",\n        \"peer_state\": \"{{ peer_state }}\",\n      }\n      ]\n    }\n  }\n\n]\n# fmt: on\n", "used_in": [], "annotations": {}, "variables": {}, "module_defaults": {}, "options": {}, "task_loading": {"total": 3, "success": 3, "failure": 0, "errors": []}}, {"py/object": "ansible_risk_insight.models.TaskFile", "type": "taskfile", "key": "taskfile role:run#taskfile:tasks/includes/health_checks/templates/iosxr_show_bgp_neighbors.yaml", "name": "iosxr_show_bgp_neighbors.yaml", "defined_in": "tasks/includes/health_checks/templates/iosxr_show_bgp_neighbors.yaml", "local_key": "taskfile taskfile:tasks/includes/health_checks/templates/iosxr_show_bgp_neighbors.yaml", "tasks": ["task role:run#taskfile:tasks/includes/health_checks/templates/iosxr_show_bgp_neighbors.yaml#task:[0]", "task role:run#taskfile:tasks/includes/health_checks/templates/iosxr_show_bgp_neighbors.yaml#task:[1]", "task role:run#taskfile:tasks/includes/health_checks/templates/iosxr_show_bgp_neighbors.yaml#task:[2]", "task role:run#taskfile:tasks/includes/health_checks/templates/iosxr_show_bgp_neighbors.yaml#task:[3]"], "role": "run", "collection": "", "yaml_lines": "# fmt: off\n[\n    {\n        \"name\": \"router_id\",\n        \"getval\": '''BGP router identifier\\s(?P<router_id>\\S+),\\slocal AS number\\s(?P<local_as>\\d+)$''',\n        \"result\": {\n            \"router_id\": \"{{ router_id }}\",\n            \"local_as\": \"{{ local_as }}\"\n        }\n    },\n    {\n        \"name\": \"bgp_table_version\",\n        \"getval\": '''BGP table version is\\s(?P<table_version>\\d+),(.*)(?P<route_table_version>\\d+)''',\n        \"result\": {\n            \"bgp_table_version\": \"{{ table_version }}\",\n            \"route_table_version\": \"{{ route_table_version }}\"\n        }\n    },\n    {\n        \"name\": \"path_memory_usage\",\n        \"getval\": '''(?P<total_entries>\\d+)\\snetwork entries using(\\s(?P<memory_usage>\\d+))''',\n        \"result\": {\n            \"path\": {\n                \"memory_usage\": \"{{ memory_usage }}\",\n                \"total_entries\": \"{{ total_entries }}\",\n            }\n        }\n    },\n    {\n        \"name\": \"neighbors\",\n        \"getval\": '''^(?P<peer>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\s+(?P<version>\\d+)\\s+(?P<peer_as>\\d+)\\s+(?P<msg_rcvd>\\d+)\\s+(?P<msg_sent>\\d+)\\s+(?P<bgp_table_version>\\d+)\\s+(?P<input_queue>\\d+)\\s+(?P<output_queue>\\d+)\\s+(?P<uptime>\\S+)\\s+(?P<peer_state>\\S+)''',\n        \"result\": {\n            \"neighbors\": [\n            {\n            \"peer\": \"{{ peer }}\",\n            \"version\": \"{{ version }}\",\n            \"peer_as\": \"{{ peer_as }}\",\n            \"msg_rcvd\": \"{{ msg_rcvd }}\",\n            \"msg_sent\": \"{{ msg_sent }}\",\n            \"bgp_table_version\": \"{{ bgp_table_version }}\",\n            \"input_queue\": \"{{ input_queue }}\",\n            \"output_queue\": \"{{ output_queue }}\",\n            \"uptime\": \"{{ uptime }}\",\n            \"peer_state\": \"{{ peer_state }}\",\n            }\n            ]\n        }\n    }\n]\n # fmt: on\n", "used_in": [], "annotations": {}, "variables": {}, "module_defaults": {}, "options": {}, "task_loading": {"total": 4, "success": 4, "failure": 0, "errors": []}}, {"py/object": "ansible_risk_insight.models.TaskFile", "type": "taskfile", "key": "taskfile role:run#taskfile:tasks/health_checks/iosxr.yaml", "name": "iosxr.yaml", "defined_in": "tasks/health_checks/iosxr.yaml", "local_key": "taskfile taskfile:tasks/health_checks/iosxr.yaml", "tasks": ["task role:run#taskfile:tasks/health_checks/iosxr.yaml#task:[0]"], "role": "run", "collection": "", "yaml_lines": "---\n- name: Parse bgp summary\n  ansible.utils.cli_parse:\n    command: \"show bgp summary\"\n    parser:\n      name: ansible.netcommon.content_templates\n    set_fact: bgp_health\n", "used_in": [], "annotations": {}, "variables": {}, "module_defaults": {}, "options": {}, "task_loading": {"total": 1, "success": 1, "failure": 0, "errors": []}}, {"py/object": "ansible_risk_insight.models.TaskFile", "type": "taskfile", "key": "taskfile role:run#taskfile:tasks/health_checks/nxos.yaml", "name": "nxos.yaml", "defined_in": "tasks/health_checks/nxos.yaml", "local_key": "taskfile taskfile:tasks/health_checks/nxos.yaml", "tasks": ["task role:run#taskfile:tasks/health_checks/nxos.yaml#task:[0]"], "role": "run", "collection": "", "yaml_lines": "---\n- name: Parse bgp summary\n  ansible.utils.cli_parse:\n    command: \"show ip bgp summary\"\n    parser:\n      name: ansible.netcommon.content_templates\n    set_fact: bgp_health\n", "used_in": [], "annotations": {}, "variables": {}, "module_defaults": {}, "options": {}, "task_loading": {"total": 1, "success": 1, "failure": 0, "errors": []}}, {"py/object": "ansible_risk_insight.models.TaskFile", "type": "taskfile", "key": "taskfile role:run#taskfile:tasks/health_checks/junos.yaml", "name": "junos.yaml", "defined_in": "tasks/health_checks/junos.yaml", "local_key": "taskfile taskfile:tasks/health_checks/junos.yaml", "tasks": ["task role:run#taskfile:tasks/health_checks/junos.yaml#task:[0]", "task role:run#taskfile:tasks/health_checks/junos.yaml#task:[1]"], "role": "run", "collection": "", "yaml_lines": "---\n- name: Parse bgp summary\n  ansible.utils.cli_parse:\n    command: \"show bgp summary\"\n    parser:\n      name: ansible.netcommon.content_templates\n    set_fact: bgp_health\n\n\n- name: Show Summary facts\n  debug:\n    msg: \"{{ bgp_health }}\"\n", "used_in": [], "annotations": {}, "variables": {}, "module_defaults": {}, "options": {}, "task_loading": {"total": 2, "success": 2, "failure": 0, "errors": []}}, {"py/object": "ansible_risk_insight.models.TaskFile", "type": "taskfile", "key": "taskfile role:run#taskfile:tasks/health_checks/vyos.yaml", "name": "vyos.yaml", "defined_in": "tasks/health_checks/vyos.yaml", "local_key": "taskfile taskfile:tasks/health_checks/vyos.yaml", "tasks": ["task role:run#taskfile:tasks/health_checks/vyos.yaml#task:[0]"], "role": "run", "collection": "", "yaml_lines": "---\n- name: Parse bgp summary\n  cli_parse:\n    command: \"show ip bgp summary\"\n    parser:\n      name: ansible.netcommon.content_templates\n    set_fact: bgp_health\n", "used_in": [], "annotations": {}, "variables": {}, "module_defaults": {}, "options": {}, "task_loading": {"total": 1, "success": 1, "failure": 0, "errors": []}}, {"py/object": "ansible_risk_insight.models.TaskFile", "type": "taskfile", "key": "taskfile role:run#taskfile:tasks/health_checks/ios.yaml", "name": "ios.yaml", "defined_in": "tasks/health_checks/ios.yaml", "local_key": "taskfile taskfile:tasks/health_checks/ios.yaml", "tasks": ["task role:run#taskfile:tasks/health_checks/ios.yaml#task:[0]"], "role": "run", "collection": "", "yaml_lines": "---\n- name: Parse bgp summary\n  ansible.utils.cli_parse:\n    command: \"show bgp summary\"\n    parser:\n      name: ansible.netcommon.content_templates\n    set_fact: bgp_health\n", "used_in": [], "annotations": {}, "variables": {}, "module_defaults": {}, "options": {}, "task_loading": {"total": 1, "success": 1, "failure": 0, "errors": []}}, {"py/object": "ansible_risk_insight.models.TaskFile", "type": "taskfile", "key": "taskfile role:run#taskfile:tasks/health_checks/eos.yaml", "name": "eos.yaml", "defined_in": "tasks/health_checks/eos.yaml", "local_key": "taskfile taskfile:tasks/health_checks/eos.yaml", "tasks": ["task role:run#taskfile:tasks/health_checks/eos.yaml#task:[0]"], "role": "run", "collection": "", "yaml_lines": "---\n- name: Parse bgp summary\n  ansible.utils.cli_parse:\n    command: \"show ip bgp summary\"\n    parser:\n      name: ansible.netcommon.content_templates\n    set_fact: bgp_health\n", "used_in": [], "annotations": {}, "variables": {}, "module_defaults": {}, "options": {}, "task_loading": {"total": 1, "success": 1, "failure": 0, "errors": []}}, {"py/object": "ansible_risk_insight.models.TaskFile", "type": "taskfile", "key": "taskfile role:run#taskfile:tasks/health_checks/templates/iosxr_show_bgp_summary.yaml", "name": "iosxr_show_bgp_summary.yaml", "defined_in": "tasks/health_checks/templates/iosxr_show_bgp_summary.yaml", "local_key": "taskfile taskfile:tasks/health_checks/templates/iosxr_show_bgp_summary.yaml", "tasks": ["task role:run#taskfile:tasks/health_checks/templates/iosxr_show_bgp_summary.yaml#task:[0]", "task role:run#taskfile:tasks/health_checks/templates/iosxr_show_bgp_summary.yaml#task:[1]", "task role:run#taskfile:tasks/health_checks/templates/iosxr_show_bgp_summary.yaml#task:[2]", "task role:run#taskfile:tasks/health_checks/templates/iosxr_show_bgp_summary.yaml#task:[3]", "task role:run#taskfile:tasks/health_checks/templates/iosxr_show_bgp_summary.yaml#task:[4]", "task role:run#taskfile:tasks/health_checks/templates/iosxr_show_bgp_summary.yaml#task:[5]", "task role:run#taskfile:tasks/health_checks/templates/iosxr_show_bgp_summary.yaml#task:[6]"], "role": "run", "collection": "", "yaml_lines": "# fmt: off\n[\n  {\n    \"name\": \"router_id\",\n    \"getval\": '''BGP router identifier\\s(?P<router_id>\\S+),\\slocal AS number\\s(?P<local_as>\\d+)$''',\n    \"result\": {\n    \"router_id\": \"{{ router_id }}\",\n    \"local_as\": \"{{ local_as }}\"\n    }\n  },\n  {\n    \"name\": \"generic_scan_interval\",\n    \"getval\": '''BGP gerneric scan interval\\s(?P<scan_interval>\\d+)$''',\n    \"result\": {\n      \"generic_scan_interval\": \"{{ scan_interval}}\"\n    }\n  },\n\n  {\n    \"name\": \"non_stop_routing\",\n    \"getval\": '''Non-stop routing is\\s(?P<non_stop_routing>\\S+)$''',\n    \"result\":{\n      \"non_stop_routing\": \"{{ non_stop_routing }}\"\n    }\n  },\n\n  {\n    \"name\": \"bgp_table_version\",\n    \"getval\": '''BGP table version is\\s(?P<table_version>\\d+),(.*)(?P<route_table_version>\\d+)''',\n    \"result\": {\n      \"bgp_table_version\": \"{{ table_version }}\",\n      \"route_table_version\": \"{{ route_table_version }}\"\n    }\n  },\n\n  {\n    \"name\": \"bgp_table_state\",\n    \"getval\": '''BGP table state:\\s(?P<table_state>\\S+)$''',\n    \"result\": {\n      \"bgp_table_state\": \"{{ table_state }}\",\n    }\n  },\n\n  {\n    \"name\": \"path_memory_usage\",\n    \"getval\": '''(?P<total_entries>\\d+)\\snetwork entries using(\\s(?P<memory_usage>\\d+))''',\n    \"result\": {\n      \"path\": {\n        \"memory_usage\": \"{{ memory_usage }}\",\n        \"total_entries\": \"{{ total_entries }}\",\n      }\n    }\n  },\n\n  {\n    \"name\": \"neighbors\",\n    \"getval\": '''^(?P<peer>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\s+(?P<version>\\d+)\\s+(?P<peer_as>\\d+)\\s+(?P<msg_rcvd>\\d+)\\s+(?P<msg_sent>\\d+)\\s+(?P<bgp_table_version>\\d+)\\s+(?P<input_queue>\\d+)\\s+(?P<output_queue>\\d+)\\s+(?P<uptime>\\S+)\\s+(?P<peer_state>\\S+)''',\n    \"result\": {\n      \"neighbors\": [\n      {\n        \"peer\": \"{{ peer }}\",\n        \"version\": \"{{ version }}\",\n        \"peer_as\": \"{{ peer_as }}\",\n        \"msg_rcvd\": \"{{ msg_rcvd }}\",\n        \"msg_sent\": \"{{ msg_sent }}\",\n        \"bgp_table_version\": \"{{ bgp_table_version }}\",\n        \"input_queue\": \"{{ input_queue }}\",\n        \"output_queue\": \"{{ output_queue }}\",\n        \"uptime\": \"{{ uptime }}\",\n        \"peer_state\": \"{{ peer_state }}\",\n      }\n      ]\n    }\n  }\n\n]\n# fmt: on\n", "used_in": [], "annotations": {}, "variables": {}, "module_defaults": {}, "options": {}, "task_loading": {"total": 7, "success": 7, "failure": 0, "errors": []}}, {"py/object": "ansible_risk_insight.models.TaskFile", "type": "taskfile", "key": "taskfile role:run#taskfile:tasks/health_checks/templates/eos_show_ip_bgp_summary.yaml", "name": "eos_show_ip_bgp_summary.yaml", "defined_in": "tasks/health_checks/templates/eos_show_ip_bgp_summary.yaml", "local_key": "taskfile taskfile:tasks/health_checks/templates/eos_show_ip_bgp_summary.yaml", "tasks": ["task role:run#taskfile:tasks/health_checks/templates/eos_show_ip_bgp_summary.yaml#task:[0]", "task role:run#taskfile:tasks/health_checks/templates/eos_show_ip_bgp_summary.yaml#task:[1]", "task role:run#taskfile:tasks/health_checks/templates/eos_show_ip_bgp_summary.yaml#task:[2]", "task role:run#taskfile:tasks/health_checks/templates/eos_show_ip_bgp_summary.yaml#task:[3]"], "role": "run", "collection": "", "yaml_lines": "# fmt: off\n[\n    {\n        \"name\": \"router_id\",\n        \"getval\": '''BGP router identifier\\s(?P<router_id>\\S+),\\slocal AS number\\s(?P<local_as>\\d+)$''',\n        \"result\": {\n            \"router_id\": \"{{ router_id }}\",\n            \"local_as\": \"{{ local_as }}\"\n        }\n    },\n    {\n        \"name\": \"bgp_table_version\",\n        \"getval\": '''BGP table version is\\s(?P<table_version>\\d+),(.*)(?P<route_table_version>\\d+)''',\n        \"result\": {\n            \"bgp_table_version\": \"{{ table_version }}\",\n            \"route_table_version\": \"{{ route_table_version }}\"\n        }\n    },\n    {\n        \"name\": \"path_memory_usage\",\n        \"getval\": '''(?P<total_entries>\\d+)\\snetwork entries using(\\s(?P<memory_usage>\\d+))''',\n        \"result\": {\n            \"path\": {\n                \"memory_usage\": \"{{ memory_usage }}\",\n                \"total_entries\": \"{{ total_entries }}\",\n            }\n        }\n    },\n    {\n        \"name\": \"neighbors\",\n        \"getval\": '''^(?P<peer>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\s+(?P<version>\\d+)\\s+(?P<peer_as>\\d+)\\s+(?P<msg_rcvd>\\d+)\\s+(?P<msg_sent>\\d+)\\s+(?P<bgp_table_version>\\d+)\\s+(?P<input_queue>\\d+)\\s+(?P<output_queue>\\d+)\\s+(?P<uptime>\\S+)\\s+(?P<peer_state>\\S+)''',\n        \"result\": {\n            \"neighbors\": [\n            {\n            \"peer\": \"{{ peer }}\",\n            \"version\": \"{{ version }}\",\n            \"peer_as\": \"{{ peer_as }}\",\n            \"msg_rcvd\": \"{{ msg_rcvd }}\",\n            \"msg_sent\": \"{{ msg_sent }}\",\n            \"bgp_table_version\": \"{{ bgp_table_version }}\",\n            \"input_queue\": \"{{ input_queue }}\",\n            \"output_queue\": \"{{ output_queue }}\",\n            \"uptime\": \"{{ uptime }}\",\n            \"peer_state\": \"{{ peer_state }}\",\n            }\n            ]\n        }\n    }\n]\n # fmt: on\n", "used_in": [], "annotations": {}, "variables": {}, "module_defaults": {}, "options": {}, "task_loading": {"total": 4, "success": 4, "failure": 0, "errors": []}}, {"py/object": "ansible_risk_insight.models.TaskFile", "type": "taskfile", "key": "taskfile role:run#taskfile:tasks/health_checks/templates/junos_show_bgp_summary.yaml", "name": "junos_show_bgp_summary.yaml", "defined_in": "tasks/health_checks/templates/junos_show_bgp_summary.yaml", "local_key": "taskfile taskfile:tasks/health_checks/templates/junos_show_bgp_summary.yaml", "tasks": ["task role:run#taskfile:tasks/health_checks/templates/junos_show_bgp_summary.yaml#task:[0]", "task role:run#taskfile:tasks/health_checks/templates/junos_show_bgp_summary.yaml#task:[1]", "task role:run#taskfile:tasks/health_checks/templates/junos_show_bgp_summary.yaml#task:[2]", "task role:run#taskfile:tasks/health_checks/templates/junos_show_bgp_summary.yaml#task:[3]"], "role": "run", "collection": "", "yaml_lines": "# fmt: off\n[\n    {\n        \"name\": \"router_id\",\n        \"getval\": '''BGP router identifier\\s(?P<router_id>\\S+),\\slocal AS number\\s(?P<local_as>\\d+)''',\n        \"result\": {\n            \"router_id\": \"{{ router_id }}\",\n            \"local_as\": \"{{ local_as }}\"\n        }\n    },\n    {\n        \"name\": \"bgp_table_version\",\n        \"getval\": '''BGP table version is\\s(?P<table_version>\\d+),(.*)(?P<route_table_version>\\d+)''',\n        \"result\": {\n            \"bgp_table_version\": \"{{ table_version }}\",\n            \"rout_table_version\": \"{{ route_table_version }}\"\n        }\n    },\n    {\n        \"name\": \"path_memory_usage\",\n        \"getval\": '''(?P<total_entries>\\d+)\\snetwork entries using(\\s(?P<memory_usage>\\d+))''',\n        \"result\": {\n            \"path\": {\n                \"memory_usage\": \"{{ memory_usage }}\",\n                \"total_entries\": \"{{ total_entries }}\",\n            }\n        }\n    },\n    {\n        \"name\": \"neighbors\",\n        \"getval\": '''^(?P<peer>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\s+(?P<peer_as>\\d+)\\s+(?P<msg_rcvd>\\d+)\\s+(?P<msg_sent>\\d+)\\s+(?P<output_queue>\\d+)\\s+(?P<flaps>\\d+)\\s+(?P<uptime>\\S+)\\s+(?P<peer_state>\\S+)''',\n        \"result\": {\n            \"neighbors\": [\n            {\n            \"peer\": \"{{ peer }}\",\n            \"peer_as\": \"{{ peer_as }}\",\n            \"msg_rcvd\": \"{{ msg_rcvd }}\",\n            \"msg_sent\": \"{{ msg_sent }}\",\n            \"output_queue\": \"{{ output_queue }}\",\n            \"uptime\": \"{{ uptime }}\",\n            \"flaps\": \"{{ flaps }}\",\n            \"peer_state\": \"{{ peer_state }}\",\n            }\n            ]\n        }\n    }\n]\n# fmt: on\n", "used_in": [], "annotations": {}, "variables": {}, "module_defaults": {}, "options": {}, "task_loading": {"total": 4, "success": 4, "failure": 0, "errors": []}}, {"py/object": "ansible_risk_insight.models.TaskFile", "type": "taskfile", "key": "taskfile role:run#taskfile:tasks/health_checks/templates/ios_show_bgp_summary.yaml", "name": "ios_show_bgp_summary.yaml", "defined_in": "tasks/health_checks/templates/ios_show_bgp_summary.yaml", "local_key": "taskfile taskfile:tasks/health_checks/templates/ios_show_bgp_summary.yaml", "tasks": ["task role:run#taskfile:tasks/health_checks/templates/ios_show_bgp_summary.yaml#task:[0]", "task role:run#taskfile:tasks/health_checks/templates/ios_show_bgp_summary.yaml#task:[1]", "task role:run#taskfile:tasks/health_checks/templates/ios_show_bgp_summary.yaml#task:[2]", "task role:run#taskfile:tasks/health_checks/templates/ios_show_bgp_summary.yaml#task:[3]"], "role": "run", "collection": "", "yaml_lines": "# fmt: off\n[\n    {\n        \"name\": \"router_id\",\n        \"getval\": '''BGP router identifier\\s(?P<router_id>\\S+),\\slocal AS number\\s(?P<local_as>\\d+)$''',\n        \"result\": {\n            \"router_id\": \"{{ router_id }}\",\n            \"local_as\": \"{{ local_as }}\"\n        }\n    },\n    {\n        \"name\": \"bgp_table_version\",\n        \"getval\": '''BGP table version is\\s(?P<table_version>\\d+),(.*)(?P<route_table_version>\\d+)''',\n        \"result\": {\n            \"bgp_table_version\": \"{{ table_version }}\",\n            \"route_table_version\": \"{{ route_table_version }}\"\n        }\n    },\n    {\n        \"name\": \"path_memory_usage\",\n        \"getval\": '''(?P<total_entries>\\d+)\\snetwork entries using(\\s(?P<memory_usage>\\d+))''',\n        \"result\": {\n            \"path\": {\n                \"memory_usage\": \"{{ memory_usage }}\",\n                \"total_entries\": \"{{ total_entries }}\",\n            }\n        }\n    },\n    {\n        \"name\": \"neighbors\",\n        \"getval\": '''^(?P<peer>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\s+(?P<version>\\d+)\\s+(?P<peer_as>\\d+)\\s+(?P<msg_rcvd>\\d+)\\s+(?P<msg_sent>\\d+)\\s+(?P<bgp_table_version>\\d+)\\s+(?P<input_queue>\\d+)\\s+(?P<output_queue>\\d+)\\s+(?P<uptime>\\S+)\\s+(?P<peer_state>\\S+)''',\n        \"result\": {\n            \"neighbors\": [\n            {\n            \"peer\": \"{{ peer }}\",\n            \"version\": \"{{ version }}\",\n            \"peer_as\": \"{{ peer_as }}\",\n            \"msg_rcvd\": \"{{ msg_rcvd }}\",\n            \"msg_sent\": \"{{ msg_sent }}\",\n            \"bgp_table_version\": \"{{ bgp_table_version }}\",\n            \"input_queue\": \"{{ input_queue }}\",\n            \"output_queue\": \"{{ output_queue }}\",\n            \"uptime\": \"{{ uptime }}\",\n            \"peer_state\": \"{{ peer_state }}\",\n            }\n            ]\n        }\n    }\n]\n # fmt: on\n", "used_in": [], "annotations": {}, "variables": {}, "module_defaults": {}, "options": {}, "task_loading": {"total": 4, "success": 4, "failure": 0, "errors": []}}, {"py/object": "ansible_risk_insight.models.TaskFile", "type": "taskfile", "key": "taskfile role:run#taskfile:tasks/health_checks/templates/nxos_show_ip_bgp_summary.yaml", "name": "nxos_show_ip_bgp_summary.yaml", "defined_in": "tasks/health_checks/templates/nxos_show_ip_bgp_summary.yaml", "local_key": "taskfile taskfile:tasks/health_checks/templates/nxos_show_ip_bgp_summary.yaml", "tasks": ["task role:run#taskfile:tasks/health_checks/templates/nxos_show_ip_bgp_summary.yaml#task:[0]"], "role": "run", "collection": "", "yaml_lines": "# fmt: off\n[\n    {\n      \"name\": \"neighbors\",\n      \"getval\": '''^(?P<peer>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\s+(?P<version>\\d+)\\s+(?P<peer_as>\\d+)\\s+(?P<msg_rcvd>\\d+)\\s+(?P<msg_sent>\\d+)\\s+(?P<bgp_table_version>\\d+)\\s+(?P<input_queue>\\d+)\\s+(?P<output_queue>\\d+)\\s+(?P<uptime>\\S+)\\s+(?P<peer_state>\\S+)''',\n      \"result\": {\n        \"neighbors\": [\n        {\n          \"peer\": \"{{ peer }}\",\n          \"version\": \"{{ version }}\",\n          \"peer_as\": \"{{ peer_as }}\",\n          \"msg_rcvd\": \"{{ msg_rcvd }}\",\n          \"msg_sent\": \"{{ msg_sent }}\",\n          \"bgp_table_version\": \"{{ bgp_table_version }}\",\n          \"input_queue\": \"{{ input_queue }}\",\n          \"output_queue\": \"{{ output_queue }}\",\n          \"uptime\": \"{{ uptime }}\",\n          \"peer_state\": \"{{ peer_state }}\",\n        }\n        ]\n      }\n    }\n]\n # fmt: on\n", "used_in": [], "annotations": {}, "variables": {}, "module_defaults": {}, "options": {}, "task_loading": {"total": 1, "success": 1, "failure": 0, "errors": []}}, {"py/object": "ansible_risk_insight.models.TaskFile", "type": "taskfile", "key": "taskfile role:run#taskfile:tasks/health_checks/templates/vyos_show_ip_bgp_summary.yaml", "name": "vyos_show_ip_bgp_summary.yaml", "defined_in": "tasks/health_checks/templates/vyos_show_ip_bgp_summary.yaml", "local_key": "taskfile taskfile:tasks/health_checks/templates/vyos_show_ip_bgp_summary.yaml", "tasks": ["task role:run#taskfile:tasks/health_checks/templates/vyos_show_ip_bgp_summary.yaml#task:[0]", "task role:run#taskfile:tasks/health_checks/templates/vyos_show_ip_bgp_summary.yaml#task:[1]", "task role:run#taskfile:tasks/health_checks/templates/vyos_show_ip_bgp_summary.yaml#task:[2]"], "role": "run", "collection": "", "yaml_lines": "# fmt: off\n[\n  {\n    \"name\": \"router_id\",\n    \"getval\": '''^BGP router identifier\\s(?P<router_id>\\S+),\\slocal AS number\\s(?P<local_as>\\d+)$''',\n    \"result\": {\n    \"router_id\": \"{{ router_id }}\",\n    \"local_as\": \"{{ local_as }}\"\n    }\n  },\n  {\n    \"name\": \"path_memory_usage\",\n    \"getval\": '''^Peers\\s(?P<total_entries>\\d+),\\susing\\s(?P<memory_usage>\\S+)''',\n    \"result\": {\n      \"path\": {\n        \"memory_usage\": \"{{ memory_usage }}\",\n        \"total_entries\": \"{{ total_entries }}\",\n      }\n    }\n  },\n  {\n    \"name\": \"neighbors\",\n    \"getval\": '''^(?P<peer>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\s+(?P<version>\\d+)\\s+(?P<peer_as>\\d+)\\s+(?P<msg_rcvd>\\d+)\\s+(?P<msg_sent>\\d+)\\s+(?P<bgp_table_version>\\d+)\\s+(?P<input_queue>\\d+)\\s+(?P<output_queue>\\d+)\\s+(?P<uptime>\\S+)\\s+(?P<peer_state>\\S+)''',\n    \"result\": {\n      \"neighbors\": [\n      {\n        \"peer\": \"{{ peer }}\",\n        \"version\": \"{{ version }}\",\n        \"peer_as\": \"{{ peer_as }}\",\n        \"msg_rcvd\": \"{{ msg_rcvd }}\",\n        \"msg_sent\": \"{{ msg_sent }}\",\n        \"bgp_table_version\": \"{{ bgp_table_version }}\",\n        \"input_queue\": \"{{ input_queue }}\",\n        \"output_queue\": \"{{ output_queue }}\",\n        \"uptime\": \"{{ uptime }}\",\n        \"peer_state\": \"{{ peer_state }}\",\n      }\n      ]\n    }\n  }\n\n]\n# fmt: on\n", "used_in": [], "annotations": {}, "variables": {}, "module_defaults": {}, "options": {}, "task_loading": {"total": 3, "success": 3, "failure": 0, "errors": []}}, {"py/object": "ansible_risk_insight.models.TaskFile", "type": "taskfile", "key": "taskfile role:run#taskfile:tasks/health_checks/templates/iosxr_show_bgp_neighbors.yaml", "name": "iosxr_show_bgp_neighbors.yaml", "defined_in": "tasks/health_checks/templates/iosxr_show_bgp_neighbors.yaml", "local_key": "taskfile taskfile:tasks/health_checks/templates/iosxr_show_bgp_neighbors.yaml", "tasks": ["task role:run#taskfile:tasks/health_checks/templates/iosxr_show_bgp_neighbors.yaml#task:[0]", "task role:run#taskfile:tasks/health_checks/templates/iosxr_show_bgp_neighbors.yaml#task:[1]", "task role:run#taskfile:tasks/health_checks/templates/iosxr_show_bgp_neighbors.yaml#task:[2]", "task role:run#taskfile:tasks/health_checks/templates/iosxr_show_bgp_neighbors.yaml#task:[3]"], "role": "run", "collection": "", "yaml_lines": "# fmt: off\n[\n    {\n        \"name\": \"router_id\",\n        \"getval\": '''BGP router identifier\\s(?P<router_id>\\S+),\\slocal AS number\\s(?P<local_as>\\d+)$''',\n        \"result\": {\n            \"router_id\": \"{{ router_id }}\",\n            \"local_as\": \"{{ local_as }}\"\n        }\n    },\n    {\n        \"name\": \"bgp_table_version\",\n        \"getval\": '''BGP table version is\\s(?P<table_version>\\d+),(.*)(?P<route_table_version>\\d+)''',\n        \"result\": {\n            \"bgp_table_version\": \"{{ table_version }}\",\n            \"route_table_version\": \"{{ route_table_version }}\"\n        }\n    },\n    {\n        \"name\": \"path_memory_usage\",\n        \"getval\": '''(?P<total_entries>\\d+)\\snetwork entries using(\\s(?P<memory_usage>\\d+))''',\n        \"result\": {\n            \"path\": {\n                \"memory_usage\": \"{{ memory_usage }}\",\n                \"total_entries\": \"{{ total_entries }}\",\n            }\n        }\n    },\n    {\n        \"name\": \"neighbors\",\n        \"getval\": '''^(?P<peer>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\s+(?P<version>\\d+)\\s+(?P<peer_as>\\d+)\\s+(?P<msg_rcvd>\\d+)\\s+(?P<msg_sent>\\d+)\\s+(?P<bgp_table_version>\\d+)\\s+(?P<input_queue>\\d+)\\s+(?P<output_queue>\\d+)\\s+(?P<uptime>\\S+)\\s+(?P<peer_state>\\S+)''',\n        \"result\": {\n            \"neighbors\": [\n            {\n            \"peer\": \"{{ peer }}\",\n            \"version\": \"{{ version }}\",\n            \"peer_as\": \"{{ peer_as }}\",\n            \"msg_rcvd\": \"{{ msg_rcvd }}\",\n            \"msg_sent\": \"{{ msg_sent }}\",\n            \"bgp_table_version\": \"{{ bgp_table_version }}\",\n            \"input_queue\": \"{{ input_queue }}\",\n            \"output_queue\": \"{{ output_queue }}\",\n            \"uptime\": \"{{ uptime }}\",\n            \"peer_state\": \"{{ peer_state }}\",\n            }\n            ]\n        }\n    }\n]\n # fmt: on\n", "used_in": [], "annotations": {}, "variables": {}, "module_defaults": {}, "options": {}, "task_loading": {"total": 4, "success": 4, "failure": 0, "errors": []}}, {"py/object": "ansible_risk_insight.models.TaskFile", "type": "taskfile", "key": "taskfile role:run#taskfile:handlers/main.yml", "name": "main.yml", "defined_in": "handlers/main.yml", "local_key": "taskfile taskfile:handlers/main.yml", "tasks": [], "role": "run", "collection": "", "yaml_lines": null, "used_in": [], "annotations": {}, "variables": {}, "module_defaults": {}, "options": {}, "task_loading": {}}], "modules": [], "playbooks": [], "plays": [], "tasks": [{"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/main_cp.yml#task:[0]", "name": "include tasks", "module": "ansible.builtin.include_tasks", "index": 0, "play_index": -1, "defined_in": "tasks/main_cp.yml", "local_key": "task taskfile:tasks/main_cp.yml#task:[0]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {"operation": "{{ operations }}"}, "options": {"name": "include tasks", "loop": "{{ operations }}", "loop_control": {"loop_var": "operation"}}, "module_options": "includes/{{operation.name}}.yaml", "executable": "includes/{{operation.name}}.yaml", "executable_type": "TaskFile", "collections_in_play": [], "yaml_lines": "- name: include tasks\n  ansible.builtin.include_tasks: includes/{{operation.name}}.yaml\n  loop: \"{{ operations }}\"\n  loop_control:\n    loop_var: operation", "line_num_in_file": [2, 6], "jsonpath": ".0", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/test_play.yml#task:[0]", "name": "Include tasks", "module": "include_tasks", "index": 0, "play_index": -1, "defined_in": "tasks/test_play.yml", "local_key": "task taskfile:tasks/test_play.yml#task:[0]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {"operation": "{{ operations }}"}, "options": {"name": "Include tasks", "loop": "{{ operations }}", "loop_control": {"loop_var": "operation"}}, "module_options": "includes/{{ operation.name }}.yaml", "executable": "includes/{{ operation.name }}.yaml", "executable_type": "TaskFile", "collections_in_play": [], "yaml_lines": "- name: Include tasks\n  include_tasks: includes/{{ operation.name }}.yaml\n  loop: \"{{ operations }}\"\n  loop_control:\n    loop_var: operation", "line_num_in_file": [2, 7], "jsonpath": ".0", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/test_play.yml#task:[1]", "name": "Validate input provided by user", "module": "fail", "index": 1, "play_index": -1, "defined_in": "tasks/test_play.yml", "local_key": "task taskfile:tasks/test_play.yml#task:[1]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "Validate input provided by user", "when": ["(username is not defined or password is not defined) and (cert_file is not defined or key_file is not defined) and (auth_token is not defined)"]}, "module_options": {"msg": "username/password or cert_file/key_file or auth_token is mandatory"}, "executable": "fail", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "- name: Validate input provided by user\n  fail:\n    msg: username/password or cert_file/key_file or auth_token is mandatory\n  when:\n    - (username is not defined or password is not defined) and (cert_file is not defined or key_file is not defined) and (auth_token is not defined)", "line_num_in_file": [8, 13], "jsonpath": ".1", "resolved_name": "ansible.builtin.fail", "possible_candidates": [], "module_info": {"collection": "ansible.builtin", "short_name": "fail", "fqcn": "ansible.builtin.fail", "key": "module collection:ansible.builtin#module:ansible.builtin.fail"}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/test_play.yml#task:[2]", "name": "Fail when more than one valid authentication method is provided", "module": "fail", "index": 2, "play_index": -1, "defined_in": "tasks/test_play.yml", "local_key": "task taskfile:tasks/test_play.yml#task:[2]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "Fail when more than one valid authentication method is provided", "when": ["((username is defined or password is defined) and (cert_file is defined or key_file is defined) and auth_token is defined) or ((username is defined or password is defined) and (cert_file is defined or key_file is defined)) or ((username is defined or password is defined) and auth_token is defined) or ((cert_file is defined or key_file is defined) and auth_token is defined)"]}, "module_options": {"msg": "Only one authentication method is allowed. Provide either username/password or cert_file/key_file or auth_token."}, "executable": "fail", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "- name: Fail when more than one valid authentication method is provided\n  fail:\n    msg: Only one authentication method is allowed. Provide either username/password or cert_file/key_file or auth_token.\n  when:\n    - ((username is defined or password is defined) and (cert_file is defined or key_file is defined) and auth_token is defined) or ((username is defined or password\n      is defined) and (cert_file is defined or key_file is defined)) or ((username is defined or password is defined) and auth_token is defined) or ((cert_file\n      is defined or key_file is defined) and auth_token is defined)", "line_num_in_file": [14, 20], "jsonpath": ".2", "resolved_name": "ansible.builtin.fail", "possible_candidates": [], "module_info": {"collection": "ansible.builtin", "short_name": "fail", "fqcn": "ansible.builtin.fail", "key": "module collection:ansible.builtin#module:ansible.builtin.fail"}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/remediate.yaml#task:[0]", "name": "Resolve target resources", "module": "ansible.builtin.include_tasks", "index": 0, "play_index": -1, "defined_in": "tasks/includes/remediate.yaml", "local_key": "task taskfile:tasks/includes/remediate.yaml#task:[0]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "Resolve target resources"}, "module_options": "includes/resources.yaml", "executable": "includes/resources.yaml", "executable_type": "TaskFile", "collections_in_play": [], "yaml_lines": "- name: Resolve target resources\n  ansible.builtin.include_tasks: includes/resources.yaml", "line_num_in_file": [2, 4], "jsonpath": ".0", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/remediate.yaml#task:[1]", "name": "Invoke gather function", "module": "ansible.builtin.include_role", "index": 1, "play_index": -1, "defined_in": "tasks/includes/remediate.yaml", "local_key": "task taskfile:tasks/includes/remediate.yaml#task:[1]", "role": "run", "collection": "", "become": null, "variables": {"operation": "remediate", "state": "replaced", "resources": "{{ bgp_resources }}"}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "Invoke gather function", "vars": {"operation": "remediate", "state": "replaced", "resources": "{{ bgp_resources }}"}}, "module_options": {"name": "network.base.resource_manager"}, "executable": "network.base.resource_manager", "executable_type": "Role", "collections_in_play": [], "yaml_lines": "- name: Invoke gather function\n  ansible.builtin.include_role:\n    name: network.base.resource_manager\n  vars:\n    operation: 'remediate'\n    state: 'replaced'\n    resources: \"{{ bgp_resources }}\"", "line_num_in_file": [5, 11], "jsonpath": ".1", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/resources.yaml#task:[0]", "name": "Set resources", "module": "ansible.builtin.set_fact", "index": 0, "play_index": -1, "defined_in": "tasks/includes/resources.yaml", "local_key": "task taskfile:tasks/includes/resources.yaml#task:[0]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {"bgp_resources": ["bgp_global", "bgp_address_family", "bgp_neighbor_address_family"]}, "loop": {}, "options": {"name": "Set resources", "when": "ansible_network_os == 'cisco.nxos.nxos'"}, "module_options": {"bgp_resources": ["bgp_global", "bgp_address_family", "bgp_neighbor_address_family"]}, "executable": "ansible.builtin.set_fact", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "- name: Set resources\n  ansible.builtin.set_fact:\n    bgp_resources:\n      - 'bgp_global'\n      - 'bgp_address_family'\n      - 'bgp_neighbor_address_family'\n  when: ansible_network_os == 'cisco.nxos.nxos'", "line_num_in_file": [2, 9], "jsonpath": ".0", "resolved_name": "ansible.builtin.set_fact", "possible_candidates": [], "module_info": {"collection": "ansible.builtin", "short_name": "set_fact", "fqcn": "ansible.builtin.set_fact", "key": "module collection:ansible.builtin#module:ansible.builtin.set_fact"}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/resources.yaml#task:[1]", "name": "Set resources", "module": "ansible.builtin.set_fact", "index": 1, "play_index": -1, "defined_in": "tasks/includes/resources.yaml", "local_key": "task taskfile:tasks/includes/resources.yaml#task:[1]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {"bgp_resources": ["bgp_global", "bgp_address_family"]}, "loop": {}, "options": {"name": "Set resources", "when": "ansible_network_os != 'cisco.nxos.nxos'"}, "module_options": {"bgp_resources": ["bgp_global", "bgp_address_family"]}, "executable": "ansible.builtin.set_fact", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "- name: Set resources\n  ansible.builtin.set_fact:\n    bgp_resources:\n      - 'bgp_global'\n      - 'bgp_address_family'\n  when: ansible_network_os != 'cisco.nxos.nxos'", "line_num_in_file": [10, 15], "jsonpath": ".1", "resolved_name": "ansible.builtin.set_fact", "possible_candidates": [], "module_info": {"collection": "ansible.builtin", "short_name": "set_fact", "fqcn": "ansible.builtin.set_fact", "key": "module collection:ansible.builtin#module:ansible.builtin.set_fact"}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/deploy.yaml#task:[0]", "name": "Resolve target resources", "module": "ansible.builtin.include_tasks", "index": 0, "play_index": -1, "defined_in": "tasks/includes/deploy.yaml", "local_key": "task taskfile:tasks/includes/deploy.yaml#task:[0]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "Resolve target resources"}, "module_options": "includes/resources.yaml", "executable": "includes/resources.yaml", "executable_type": "TaskFile", "collections_in_play": [], "yaml_lines": "- name: Resolve target resources\n  ansible.builtin.include_tasks: includes/resources.yaml", "line_num_in_file": [2, 4], "jsonpath": ".0", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/deploy.yaml#task:[1]", "name": "Invoke deploy function", "module": "ansible.builtin.include_role", "index": 1, "play_index": -1, "defined_in": "tasks/includes/deploy.yaml", "local_key": "task taskfile:tasks/includes/deploy.yaml#task:[1]", "role": "run", "collection": "", "become": null, "variables": {"operation": "deploy", "resources": "{{ bgp_resources }}"}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "Invoke deploy function", "vars": {"operation": "deploy", "resources": "{{ bgp_resources }}"}}, "module_options": {"name": "network.base.resource_manager"}, "executable": "network.base.resource_manager", "executable_type": "Role", "collections_in_play": [], "yaml_lines": "- name: Invoke deploy function\n  ansible.builtin.include_role:\n    name: network.base.resource_manager\n  vars:\n    operation: 'deploy'\n    resources: \"{{ bgp_resources }}\"", "line_num_in_file": [5, 10], "jsonpath": ".1", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/configure.yaml#task:[0]", "name": "Invoke configure function", "module": "include_role", "index": 0, "play_index": -1, "defined_in": "tasks/includes/configure.yaml", "local_key": "task taskfile:tasks/includes/configure.yaml#task:[0]", "role": "run", "collection": "", "become": null, "variables": {"operation": "configure"}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "Invoke configure function", "vars": {"operation": "configure"}}, "module_options": {"name": "network.base.resource_manager"}, "executable": "network.base.resource_manager", "executable_type": "Role", "collections_in_play": [], "yaml_lines": "- name: Invoke configure function\n  include_role:\n    name: network.base.resource_manager\n  vars:\n    operation: 'configure'", "line_num_in_file": [2, 6], "jsonpath": ".0", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/persist.yaml#task:[0]", "name": "Resolve target resources", "module": "ansible.builtin.include_tasks", "index": 0, "play_index": -1, "defined_in": "tasks/includes/persist.yaml", "local_key": "task taskfile:tasks/includes/persist.yaml#task:[0]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "Resolve target resources"}, "module_options": "includes/resources.yaml", "executable": "includes/resources.yaml", "executable_type": "TaskFile", "collections_in_play": [], "yaml_lines": "- name: Resolve target resources\n  ansible.builtin.include_tasks: includes/resources.yaml", "line_num_in_file": [2, 4], "jsonpath": ".0", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/persist.yaml#task:[1]", "name": "Invoke gather function", "module": "ansible.builtin.include_role", "index": 1, "play_index": -1, "defined_in": "tasks/includes/persist.yaml", "local_key": "task taskfile:tasks/includes/persist.yaml#task:[1]", "role": "run", "collection": "", "become": null, "variables": {"operation": "persist", "resources": "{{ bgp_resources }}", "ignore_empty": "{{ persist_empty | default(true) }}"}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "Invoke gather function", "vars": {"operation": "persist", "resources": "{{ bgp_resources }}", "ignore_empty": "{{ persist_empty | default(true) }}"}}, "module_options": {"name": "network.base.resource_manager"}, "executable": "network.base.resource_manager", "executable_type": "Role", "collections_in_play": [], "yaml_lines": "- name: Invoke gather function\n  ansible.builtin.include_role:\n    name: network.base.resource_manager\n  vars:\n    operation: 'persist'\n    resources: \"{{ bgp_resources }}\"\n    ignore_empty: \"{{ persist_empty | default(true) }}\"", "line_num_in_file": [5, 11], "jsonpath": ".1", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/gather.yaml#task:[0]", "name": "Resolve target resources", "module": "ansible.builtin.include_tasks", "index": 0, "play_index": -1, "defined_in": "tasks/includes/gather.yaml", "local_key": "task taskfile:tasks/includes/gather.yaml#task:[0]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "Resolve target resources"}, "module_options": "includes/resources.yaml", "executable": "includes/resources.yaml", "executable_type": "TaskFile", "collections_in_play": [], "yaml_lines": "- name: Resolve target resources\n  ansible.builtin.include_tasks: includes/resources.yaml", "line_num_in_file": [2, 4], "jsonpath": ".0", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/gather.yaml#task:[1]", "name": "Invoke gather function", "module": "include_role", "index": 1, "play_index": -1, "defined_in": "tasks/includes/gather.yaml", "local_key": "task taskfile:tasks/includes/gather.yaml#task:[1]", "role": "run", "collection": "", "become": null, "variables": {"operation": "gather", "resources": "{{ bgp_resources }}"}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "Invoke gather function", "vars": {"operation": "gather", "resources": "{{ bgp_resources }}"}}, "module_options": {"name": "network.base.resource_manager"}, "executable": "network.base.resource_manager", "executable_type": "Role", "collections_in_play": [], "yaml_lines": "- name: Invoke gather function\n  include_role:\n    name: network.base.resource_manager\n  vars:\n    operation: 'gather'\n    resources: \"{{ bgp_resources }}\"", "line_num_in_file": [5, 10], "jsonpath": ".1", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/detect.yaml#task:[0]", "name": "Resolve target resources", "module": "ansible.builtin.include_tasks", "index": 0, "play_index": -1, "defined_in": "tasks/includes/detect.yaml", "local_key": "task taskfile:tasks/includes/detect.yaml#task:[0]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "Resolve target resources"}, "module_options": "includes/resources.yaml", "executable": "includes/resources.yaml", "executable_type": "TaskFile", "collections_in_play": [], "yaml_lines": "- name: Resolve target resources\n  ansible.builtin.include_tasks: includes/resources.yaml", "line_num_in_file": [2, 4], "jsonpath": ".0", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/detect.yaml#task:[1]", "name": "Invoke detect function", "module": "ansible.builtin.include_role", "index": 1, "play_index": -1, "defined_in": "tasks/includes/detect.yaml", "local_key": "task taskfile:tasks/includes/detect.yaml#task:[1]", "role": "run", "collection": "", "become": null, "variables": {"operation": "detect", "state": "replaced", "resources": "{{ bgp_resources }}"}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "Invoke detect function", "vars": {"operation": "detect", "state": "replaced", "resources": "{{ bgp_resources }}"}}, "module_options": {"name": "network.base.resource_manager"}, "executable": "network.base.resource_manager", "executable_type": "Role", "collections_in_play": [], "yaml_lines": "- name: Invoke detect function\n  ansible.builtin.include_role:\n    name: network.base.resource_manager\n  vars:\n    operation: 'detect'\n    state: 'replaced'\n    resources: \"{{ bgp_resources }}\"", "line_num_in_file": [5, 11], "jsonpath": ".1", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/list.yaml#task:[0]", "name": "Invoke list function", "module": "ansible.builtin.include_role", "index": 0, "play_index": -1, "defined_in": "tasks/includes/list.yaml", "local_key": "task taskfile:tasks/includes/list.yaml#task:[0]", "role": "run", "collection": "", "become": null, "variables": {"operation": "list"}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "Invoke list function", "vars": {"operation": "list"}}, "module_options": {"name": "network.base.resource_manager"}, "executable": "network.base.resource_manager", "executable_type": "Role", "collections_in_play": [], "yaml_lines": "- name: Invoke list function\n  ansible.builtin.include_role:\n    name: network.base.resource_manager\n  vars:\n    operation: 'list'", "line_num_in_file": [2, 6], "jsonpath": ".0", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/health_check.yaml#task:[0]", "name": "Include tasks", "module": "ansible.builtin.include_tasks", "index": 0, "play_index": -1, "defined_in": "tasks/includes/health_check.yaml", "local_key": "task taskfile:tasks/includes/health_check.yaml#task:[0]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "Include tasks"}, "module_options": "./health_checks/{{ ansible_network_os.split('.')[2] }}.yaml", "executable": "./health_checks/{{ ansible_network_os.split('.')[2] }}.yaml", "executable_type": "TaskFile", "collections_in_play": [], "yaml_lines": "- name: Include tasks\n  ansible.builtin.include_tasks: ./health_checks/{{ ansible_network_os.split('.')[2] }}.yaml", "line_num_in_file": [2, 4], "jsonpath": ".0", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/health_check.yaml#task:[1]", "name": "Set health checks fact", "module": "ansible.builtin.set_fact", "index": 1, "play_index": -1, "defined_in": "tasks/includes/health_check.yaml", "local_key": "task taskfile:tasks/includes/health_check.yaml#task:[1]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {"health_checks": "{{ bgp_health | network.bgp.health_check_view(operation) }}"}, "loop": {}, "options": {"name": "Set health checks fact"}, "module_options": {"health_checks": "{{ bgp_health | network.bgp.health_check_view(operation) }}"}, "executable": "ansible.builtin.set_fact", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "- name: Set health checks fact\n  ansible.builtin.set_fact:\n     health_checks: \"{{ bgp_health | network.bgp.health_check_view(operation) }}\"", "line_num_in_file": [5, 8], "jsonpath": ".1", "resolved_name": "ansible.builtin.set_fact", "possible_candidates": [], "module_info": {"collection": "ansible.builtin", "short_name": "set_fact", "fqcn": "ansible.builtin.set_fact", "key": "module collection:ansible.builtin#module:ansible.builtin.set_fact"}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/health_check.yaml#task:[2]", "name": "BGP health checks", "module": "debug", "index": 2, "play_index": -1, "defined_in": "tasks/includes/health_check.yaml", "local_key": "task taskfile:tasks/includes/health_check.yaml#task:[2]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "BGP health checks", "failed_when": "'unsuccessful' == health_checks.status"}, "module_options": {"var": "health_checks"}, "executable": "debug", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "- name: BGP health checks\n  debug:\n     var: health_checks\n  failed_when: \"'unsuccessful' == health_checks.status\"", "line_num_in_file": [9, 12], "jsonpath": ".2", "resolved_name": "ansible.builtin.debug", "possible_candidates": [], "module_info": {"collection": "ansible.builtin", "short_name": "debug", "fqcn": "ansible.builtin.debug", "key": "module collection:ansible.builtin#module:ansible.builtin.debug"}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/health_checks/iosxr.yaml#task:[0]", "name": "Parse bgp summary", "module": "cli_parse", "index": 0, "play_index": -1, "defined_in": "tasks/includes/health_checks/iosxr.yaml", "local_key": "task taskfile:tasks/includes/health_checks/iosxr.yaml#task:[0]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "Parse bgp summary"}, "module_options": {"command": "show bgp summary", "parser": {"name": "ansible.netcommon.content_templates"}, "set_fact": "bgp_health"}, "executable": "cli_parse", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "- name: Parse bgp summary\n  cli_parse:\n    command: \"show bgp summary\"\n    parser:\n      name: ansible.netcommon.content_templates\n    set_fact: bgp_health", "line_num_in_file": [2, 7], "jsonpath": ".0", "resolved_name": "", "possible_candidates": [{"py/tuple": ["ansible.utils.cli_parse", {"type": "collection", "name": "ansible.utils", "version": "2.9.0", "hash": "8f503cdb7103efbb9f97f2fe9a47027613c74cc85f3232230c895fbd9cf7afce"}]}], "module_info": {"collection": "ansible.utils", "short_name": "cli_parse", "fqcn": "ansible.utils.cli_parse", "key": "module collection:ansible.utils#module:ansible.utils.cli_parse"}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/health_checks/nxos.yaml#task:[0]", "name": "Parse bgp summary", "module": "ansible.utils.cli_parse", "index": 0, "play_index": -1, "defined_in": "tasks/includes/health_checks/nxos.yaml", "local_key": "task taskfile:tasks/includes/health_checks/nxos.yaml#task:[0]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "Parse bgp summary"}, "module_options": {"command": "show ip bgp summary", "parser": {"name": "ansible.netcommon.content_templates"}, "set_fact": "bgp_health"}, "executable": "ansible.utils.cli_parse", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "- name: Parse bgp summary\n  ansible.utils.cli_parse:\n    command: \"show ip bgp summary\"\n    parser:\n      name: ansible.netcommon.content_templates\n    set_fact: bgp_health", "line_num_in_file": [2, 7], "jsonpath": ".0", "resolved_name": "", "possible_candidates": [{"py/tuple": ["ansible.utils.cli_parse", {"type": "collection", "name": "ansible.utils", "version": "2.9.0", "hash": "8f503cdb7103efbb9f97f2fe9a47027613c74cc85f3232230c895fbd9cf7afce"}]}], "module_info": {"collection": "ansible.utils", "short_name": "cli_parse", "fqcn": "ansible.utils.cli_parse", "key": "module collection:ansible.utils#module:ansible.utils.cli_parse"}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/health_checks/junos.yaml#task:[0]", "name": "Parse bgp summary", "module": "ansible.utils.cli_parse", "index": 0, "play_index": -1, "defined_in": "tasks/includes/health_checks/junos.yaml", "local_key": "task taskfile:tasks/includes/health_checks/junos.yaml#task:[0]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "Parse bgp summary"}, "module_options": {"command": "show bgp summary", "parser": {"name": "ansible.netcommon.content_templates"}, "set_fact": "bgp_health"}, "executable": "ansible.utils.cli_parse", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "- name: Parse bgp summary\n  ansible.utils.cli_parse:\n    command: \"show bgp summary\"\n    parser:\n      name: ansible.netcommon.content_templates\n    set_fact: bgp_health", "line_num_in_file": [2, 9], "jsonpath": ".0", "resolved_name": "", "possible_candidates": [{"py/tuple": ["ansible.utils.cli_parse", {"type": "collection", "name": "ansible.utils", "version": "2.9.0", "hash": "8f503cdb7103efbb9f97f2fe9a47027613c74cc85f3232230c895fbd9cf7afce"}]}], "module_info": {"collection": "ansible.utils", "short_name": "cli_parse", "fqcn": "ansible.utils.cli_parse", "key": "module collection:ansible.utils#module:ansible.utils.cli_parse"}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/health_checks/junos.yaml#task:[1]", "name": "Show Summary facts", "module": "debug", "index": 1, "play_index": -1, "defined_in": "tasks/includes/health_checks/junos.yaml", "local_key": "task taskfile:tasks/includes/health_checks/junos.yaml#task:[1]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "Show Summary facts"}, "module_options": {"msg": "{{ bgp_health }}"}, "executable": "debug", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "- name: Show Summary facts\n  debug:\n    msg: \"{{ bgp_health }}\"", "line_num_in_file": [10, 12], "jsonpath": ".1", "resolved_name": "ansible.builtin.debug", "possible_candidates": [], "module_info": {"collection": "ansible.builtin", "short_name": "debug", "fqcn": "ansible.builtin.debug", "key": "module collection:ansible.builtin#module:ansible.builtin.debug"}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/health_checks/vyos.yaml#task:[0]", "name": "Parse bgp summary", "module": "cli_parse", "index": 0, "play_index": -1, "defined_in": "tasks/includes/health_checks/vyos.yaml", "local_key": "task taskfile:tasks/includes/health_checks/vyos.yaml#task:[0]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "Parse bgp summary"}, "module_options": {"command": "show ip bgp summary", "parser": {"name": "ansible.netcommon.content_templates"}, "set_fact": "bgp_health"}, "executable": "cli_parse", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "- name: Parse bgp summary\n  cli_parse:\n    command: \"show ip bgp summary\"\n    parser:\n      name: ansible.netcommon.content_templates\n    set_fact: bgp_health", "line_num_in_file": [2, 7], "jsonpath": ".0", "resolved_name": "", "possible_candidates": [{"py/tuple": ["ansible.utils.cli_parse", {"type": "collection", "name": "ansible.utils", "version": "2.9.0", "hash": "8f503cdb7103efbb9f97f2fe9a47027613c74cc85f3232230c895fbd9cf7afce"}]}], "module_info": {"collection": "ansible.utils", "short_name": "cli_parse", "fqcn": "ansible.utils.cli_parse", "key": "module collection:ansible.utils#module:ansible.utils.cli_parse"}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/health_checks/ios.yaml#task:[0]", "name": "Parse bgp summary", "module": "ansible.utils.cli_parse", "index": 0, "play_index": -1, "defined_in": "tasks/includes/health_checks/ios.yaml", "local_key": "task taskfile:tasks/includes/health_checks/ios.yaml#task:[0]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "Parse bgp summary"}, "module_options": {"command": "show bgp summary", "parser": {"name": "ansible.netcommon.content_templates"}, "set_fact": "bgp_health"}, "executable": "ansible.utils.cli_parse", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "- name: Parse bgp summary\n  ansible.utils.cli_parse:\n    command: \"show bgp summary\"\n    parser:\n      name: ansible.netcommon.content_templates\n    set_fact: bgp_health", "line_num_in_file": [2, 7], "jsonpath": ".0", "resolved_name": "", "possible_candidates": [{"py/tuple": ["ansible.utils.cli_parse", {"type": "collection", "name": "ansible.utils", "version": "2.9.0", "hash": "8f503cdb7103efbb9f97f2fe9a47027613c74cc85f3232230c895fbd9cf7afce"}]}], "module_info": {"collection": "ansible.utils", "short_name": "cli_parse", "fqcn": "ansible.utils.cli_parse", "key": "module collection:ansible.utils#module:ansible.utils.cli_parse"}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/health_checks/eos.yaml#task:[0]", "name": "Parse bgp summary", "module": "cli_parse", "index": 0, "play_index": -1, "defined_in": "tasks/includes/health_checks/eos.yaml", "local_key": "task taskfile:tasks/includes/health_checks/eos.yaml#task:[0]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "Parse bgp summary"}, "module_options": {"command": "show ip bgp summary", "parser": {"name": "ansible.netcommon.content_templates"}, "set_fact": "bgp_health"}, "executable": "cli_parse", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "- name: Parse bgp summary\n  cli_parse:\n    command: \"show ip bgp summary\"\n    parser:\n      name: ansible.netcommon.content_templates\n    set_fact: bgp_health", "line_num_in_file": [2, 7], "jsonpath": ".0", "resolved_name": "", "possible_candidates": [{"py/tuple": ["ansible.utils.cli_parse", {"type": "collection", "name": "ansible.utils", "version": "2.9.0", "hash": "8f503cdb7103efbb9f97f2fe9a47027613c74cc85f3232230c895fbd9cf7afce"}]}], "module_info": {"collection": "ansible.utils", "short_name": "cli_parse", "fqcn": "ansible.utils.cli_parse", "key": "module collection:ansible.utils#module:ansible.utils.cli_parse"}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/health_checks/templates/iosxr_show_bgp_summary.yaml#task:[0]", "name": "router_id", "module": "getval", "index": 0, "play_index": -1, "defined_in": "tasks/includes/health_checks/templates/iosxr_show_bgp_summary.yaml", "local_key": "task taskfile:tasks/includes/health_checks/templates/iosxr_show_bgp_summary.yaml#task:[0]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "router_id", "result": {"router_id": "{{ router_id }}", "local_as": "{{ local_as }}"}}, "module_options": "'BGP router identifier\\s(?P<router_id>\\S+),\\slocal AS number\\s(?P<local_as>\\d+)$'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".0", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/health_checks/templates/iosxr_show_bgp_summary.yaml#task:[1]", "name": "generic_scan_interval", "module": "getval", "index": 1, "play_index": -1, "defined_in": "tasks/includes/health_checks/templates/iosxr_show_bgp_summary.yaml", "local_key": "task taskfile:tasks/includes/health_checks/templates/iosxr_show_bgp_summary.yaml#task:[1]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "generic_scan_interval", "result": {"generic_scan_interval": "{{ scan_interval}}"}}, "module_options": "'BGP gerneric scan interval\\s(?P<scan_interval>\\d+)$'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".1", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/health_checks/templates/iosxr_show_bgp_summary.yaml#task:[2]", "name": "non_stop_routing", "module": "getval", "index": 2, "play_index": -1, "defined_in": "tasks/includes/health_checks/templates/iosxr_show_bgp_summary.yaml", "local_key": "task taskfile:tasks/includes/health_checks/templates/iosxr_show_bgp_summary.yaml#task:[2]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "non_stop_routing", "result": {"non_stop_routing": "{{ non_stop_routing }}"}}, "module_options": "'Non-stop routing is\\s(?P<non_stop_routing>\\S+)$'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".2", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/health_checks/templates/iosxr_show_bgp_summary.yaml#task:[3]", "name": "bgp_table_version", "module": "getval", "index": 3, "play_index": -1, "defined_in": "tasks/includes/health_checks/templates/iosxr_show_bgp_summary.yaml", "local_key": "task taskfile:tasks/includes/health_checks/templates/iosxr_show_bgp_summary.yaml#task:[3]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "bgp_table_version", "result": {"bgp_table_version": "{{ table_version }}", "route_table_version": "{{ route_table_version }}"}}, "module_options": "'BGP table version is\\s(?P<table_version>\\d+),(.*)(?P<route_table_version>\\d+)'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".3", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/health_checks/templates/iosxr_show_bgp_summary.yaml#task:[4]", "name": "bgp_table_state", "module": "getval", "index": 4, "play_index": -1, "defined_in": "tasks/includes/health_checks/templates/iosxr_show_bgp_summary.yaml", "local_key": "task taskfile:tasks/includes/health_checks/templates/iosxr_show_bgp_summary.yaml#task:[4]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "bgp_table_state", "result": {"bgp_table_state": "{{ table_state }}"}}, "module_options": "'BGP table state:\\s(?P<table_state>\\S+)$'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".4", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/health_checks/templates/iosxr_show_bgp_summary.yaml#task:[5]", "name": "path_memory_usage", "module": "getval", "index": 5, "play_index": -1, "defined_in": "tasks/includes/health_checks/templates/iosxr_show_bgp_summary.yaml", "local_key": "task taskfile:tasks/includes/health_checks/templates/iosxr_show_bgp_summary.yaml#task:[5]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "path_memory_usage", "result": {"path": {"memory_usage": "{{ memory_usage }}", "total_entries": "{{ total_entries }}"}}}, "module_options": "'(?P<total_entries>\\d+)\\snetwork entries using(\\s(?P<memory_usage>\\d+))'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".5", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/health_checks/templates/iosxr_show_bgp_summary.yaml#task:[6]", "name": "neighbors", "module": "getval", "index": 6, "play_index": -1, "defined_in": "tasks/includes/health_checks/templates/iosxr_show_bgp_summary.yaml", "local_key": "task taskfile:tasks/includes/health_checks/templates/iosxr_show_bgp_summary.yaml#task:[6]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "neighbors", "result": {"neighbors": [{"peer": "{{ peer }}", "version": "{{ version }}", "peer_as": "{{ peer_as }}", "msg_rcvd": "{{ msg_rcvd }}", "msg_sent": "{{ msg_sent }}", "bgp_table_version": "{{ bgp_table_version }}", "input_queue": "{{ input_queue }}", "output_queue": "{{ output_queue }}", "uptime": "{{ uptime }}", "peer_state": "{{ peer_state }}"}]}}, "module_options": "'^(?P<peer>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\s+(?P<version>\\d+)\\s+(?P<peer_as>\\d+)\\s+(?P<msg_rcvd>\\d+)\\s+(?P<msg_sent>\\d+)\\s+(?P<bgp_table_version>\\d+)\\s+(?P<input_queue>\\d+)\\s+(?P<output_queue>\\d+)\\s+(?P<uptime>\\S+)\\s+(?P<peer_state>\\S+)'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".6", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/health_checks/templates/eos_show_ip_bgp_summary.yaml#task:[0]", "name": "router_id", "module": "getval", "index": 0, "play_index": -1, "defined_in": "tasks/includes/health_checks/templates/eos_show_ip_bgp_summary.yaml", "local_key": "task taskfile:tasks/includes/health_checks/templates/eos_show_ip_bgp_summary.yaml#task:[0]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "router_id", "result": {"router_id": "{{ router_id }}", "local_as": "{{ local_as }}"}}, "module_options": "'BGP router identifier\\s(?P<router_id>\\S+),\\slocal AS number\\s(?P<local_as>\\d+)$'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".0", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/health_checks/templates/eos_show_ip_bgp_summary.yaml#task:[1]", "name": "bgp_table_version", "module": "getval", "index": 1, "play_index": -1, "defined_in": "tasks/includes/health_checks/templates/eos_show_ip_bgp_summary.yaml", "local_key": "task taskfile:tasks/includes/health_checks/templates/eos_show_ip_bgp_summary.yaml#task:[1]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "bgp_table_version", "result": {"bgp_table_version": "{{ table_version }}", "route_table_version": "{{ route_table_version }}"}}, "module_options": "'BGP table version is\\s(?P<table_version>\\d+),(.*)(?P<route_table_version>\\d+)'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".1", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/health_checks/templates/eos_show_ip_bgp_summary.yaml#task:[2]", "name": "path_memory_usage", "module": "getval", "index": 2, "play_index": -1, "defined_in": "tasks/includes/health_checks/templates/eos_show_ip_bgp_summary.yaml", "local_key": "task taskfile:tasks/includes/health_checks/templates/eos_show_ip_bgp_summary.yaml#task:[2]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "path_memory_usage", "result": {"path": {"memory_usage": "{{ memory_usage }}", "total_entries": "{{ total_entries }}"}}}, "module_options": "'(?P<total_entries>\\d+)\\snetwork entries using(\\s(?P<memory_usage>\\d+))'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".2", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/health_checks/templates/eos_show_ip_bgp_summary.yaml#task:[3]", "name": "neighbors", "module": "getval", "index": 3, "play_index": -1, "defined_in": "tasks/includes/health_checks/templates/eos_show_ip_bgp_summary.yaml", "local_key": "task taskfile:tasks/includes/health_checks/templates/eos_show_ip_bgp_summary.yaml#task:[3]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "neighbors", "result": {"neighbors": [{"peer": "{{ peer }}", "version": "{{ version }}", "peer_as": "{{ peer_as }}", "msg_rcvd": "{{ msg_rcvd }}", "msg_sent": "{{ msg_sent }}", "bgp_table_version": "{{ bgp_table_version }}", "input_queue": "{{ input_queue }}", "output_queue": "{{ output_queue }}", "uptime": "{{ uptime }}", "peer_state": "{{ peer_state }}"}]}}, "module_options": "'^(?P<peer>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\s+(?P<version>\\d+)\\s+(?P<peer_as>\\d+)\\s+(?P<msg_rcvd>\\d+)\\s+(?P<msg_sent>\\d+)\\s+(?P<bgp_table_version>\\d+)\\s+(?P<input_queue>\\d+)\\s+(?P<output_queue>\\d+)\\s+(?P<uptime>\\S+)\\s+(?P<peer_state>\\S+)'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".3", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/health_checks/templates/junos_show_bgp_summary.yaml#task:[0]", "name": "router_id", "module": "getval", "index": 0, "play_index": -1, "defined_in": "tasks/includes/health_checks/templates/junos_show_bgp_summary.yaml", "local_key": "task taskfile:tasks/includes/health_checks/templates/junos_show_bgp_summary.yaml#task:[0]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "router_id", "result": {"router_id": "{{ router_id }}", "local_as": "{{ local_as }}"}}, "module_options": "'BGP router identifier\\s(?P<router_id>\\S+),\\slocal AS number\\s(?P<local_as>\\d+)'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".0", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/health_checks/templates/junos_show_bgp_summary.yaml#task:[1]", "name": "bgp_table_version", "module": "getval", "index": 1, "play_index": -1, "defined_in": "tasks/includes/health_checks/templates/junos_show_bgp_summary.yaml", "local_key": "task taskfile:tasks/includes/health_checks/templates/junos_show_bgp_summary.yaml#task:[1]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "bgp_table_version", "result": {"bgp_table_version": "{{ table_version }}", "rout_table_version": "{{ route_table_version }}"}}, "module_options": "'BGP table version is\\s(?P<table_version>\\d+),(.*)(?P<route_table_version>\\d+)'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".1", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/health_checks/templates/junos_show_bgp_summary.yaml#task:[2]", "name": "path_memory_usage", "module": "getval", "index": 2, "play_index": -1, "defined_in": "tasks/includes/health_checks/templates/junos_show_bgp_summary.yaml", "local_key": "task taskfile:tasks/includes/health_checks/templates/junos_show_bgp_summary.yaml#task:[2]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "path_memory_usage", "result": {"path": {"memory_usage": "{{ memory_usage }}", "total_entries": "{{ total_entries }}"}}}, "module_options": "'(?P<total_entries>\\d+)\\snetwork entries using(\\s(?P<memory_usage>\\d+))'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".2", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/health_checks/templates/junos_show_bgp_summary.yaml#task:[3]", "name": "neighbors", "module": "getval", "index": 3, "play_index": -1, "defined_in": "tasks/includes/health_checks/templates/junos_show_bgp_summary.yaml", "local_key": "task taskfile:tasks/includes/health_checks/templates/junos_show_bgp_summary.yaml#task:[3]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "neighbors", "result": {"neighbors": [{"peer": "{{ peer }}", "peer_as": "{{ peer_as }}", "msg_rcvd": "{{ msg_rcvd }}", "msg_sent": "{{ msg_sent }}", "output_queue": "{{ output_queue }}", "uptime": "{{ uptime }}", "flaps": "{{ flaps }}", "peer_state": "{{ peer_state }}"}]}}, "module_options": "'^(?P<peer>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\s+(?P<peer_as>\\d+)\\s+(?P<msg_rcvd>\\d+)\\s+(?P<msg_sent>\\d+)\\s+(?P<output_queue>\\d+)\\s+(?P<flaps>\\d+)\\s+(?P<uptime>\\S+)\\s+(?P<peer_state>\\S+)'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".3", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/health_checks/templates/ios_show_bgp_summary.yaml#task:[0]", "name": "router_id", "module": "getval", "index": 0, "play_index": -1, "defined_in": "tasks/includes/health_checks/templates/ios_show_bgp_summary.yaml", "local_key": "task taskfile:tasks/includes/health_checks/templates/ios_show_bgp_summary.yaml#task:[0]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "router_id", "result": {"router_id": "{{ router_id }}", "local_as": "{{ local_as }}"}}, "module_options": "'BGP router identifier\\s(?P<router_id>\\S+),\\slocal AS number\\s(?P<local_as>\\d+)$'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".0", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/health_checks/templates/ios_show_bgp_summary.yaml#task:[1]", "name": "bgp_table_version", "module": "getval", "index": 1, "play_index": -1, "defined_in": "tasks/includes/health_checks/templates/ios_show_bgp_summary.yaml", "local_key": "task taskfile:tasks/includes/health_checks/templates/ios_show_bgp_summary.yaml#task:[1]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "bgp_table_version", "result": {"bgp_table_version": "{{ table_version }}", "route_table_version": "{{ route_table_version }}"}}, "module_options": "'BGP table version is\\s(?P<table_version>\\d+),(.*)(?P<route_table_version>\\d+)'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".1", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/health_checks/templates/ios_show_bgp_summary.yaml#task:[2]", "name": "path_memory_usage", "module": "getval", "index": 2, "play_index": -1, "defined_in": "tasks/includes/health_checks/templates/ios_show_bgp_summary.yaml", "local_key": "task taskfile:tasks/includes/health_checks/templates/ios_show_bgp_summary.yaml#task:[2]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "path_memory_usage", "result": {"path": {"memory_usage": "{{ memory_usage }}", "total_entries": "{{ total_entries }}"}}}, "module_options": "'(?P<total_entries>\\d+)\\snetwork entries using(\\s(?P<memory_usage>\\d+))'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".2", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/health_checks/templates/ios_show_bgp_summary.yaml#task:[3]", "name": "neighbors", "module": "getval", "index": 3, "play_index": -1, "defined_in": "tasks/includes/health_checks/templates/ios_show_bgp_summary.yaml", "local_key": "task taskfile:tasks/includes/health_checks/templates/ios_show_bgp_summary.yaml#task:[3]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "neighbors", "result": {"neighbors": [{"peer": "{{ peer }}", "version": "{{ version }}", "peer_as": "{{ peer_as }}", "msg_rcvd": "{{ msg_rcvd }}", "msg_sent": "{{ msg_sent }}", "bgp_table_version": "{{ bgp_table_version }}", "input_queue": "{{ input_queue }}", "output_queue": "{{ output_queue }}", "uptime": "{{ uptime }}", "peer_state": "{{ peer_state }}"}]}}, "module_options": "'^(?P<peer>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\s+(?P<version>\\d+)\\s+(?P<peer_as>\\d+)\\s+(?P<msg_rcvd>\\d+)\\s+(?P<msg_sent>\\d+)\\s+(?P<bgp_table_version>\\d+)\\s+(?P<input_queue>\\d+)\\s+(?P<output_queue>\\d+)\\s+(?P<uptime>\\S+)\\s+(?P<peer_state>\\S+)'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".3", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/health_checks/templates/nxos_show_ip_bgp_summary.yaml#task:[0]", "name": "neighbors", "module": "getval", "index": 0, "play_index": -1, "defined_in": "tasks/includes/health_checks/templates/nxos_show_ip_bgp_summary.yaml", "local_key": "task taskfile:tasks/includes/health_checks/templates/nxos_show_ip_bgp_summary.yaml#task:[0]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "neighbors", "result": {"neighbors": [{"peer": "{{ peer }}", "version": "{{ version }}", "peer_as": "{{ peer_as }}", "msg_rcvd": "{{ msg_rcvd }}", "msg_sent": "{{ msg_sent }}", "bgp_table_version": "{{ bgp_table_version }}", "input_queue": "{{ input_queue }}", "output_queue": "{{ output_queue }}", "uptime": "{{ uptime }}", "peer_state": "{{ peer_state }}"}]}}, "module_options": "'^(?P<peer>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\s+(?P<version>\\d+)\\s+(?P<peer_as>\\d+)\\s+(?P<msg_rcvd>\\d+)\\s+(?P<msg_sent>\\d+)\\s+(?P<bgp_table_version>\\d+)\\s+(?P<input_queue>\\d+)\\s+(?P<output_queue>\\d+)\\s+(?P<uptime>\\S+)\\s+(?P<peer_state>\\S+)'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".0", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/health_checks/templates/vyos_show_ip_bgp_summary.yaml#task:[0]", "name": "router_id", "module": "getval", "index": 0, "play_index": -1, "defined_in": "tasks/includes/health_checks/templates/vyos_show_ip_bgp_summary.yaml", "local_key": "task taskfile:tasks/includes/health_checks/templates/vyos_show_ip_bgp_summary.yaml#task:[0]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "router_id", "result": {"router_id": "{{ router_id }}", "local_as": "{{ local_as }}"}}, "module_options": "'^BGP router identifier\\s(?P<router_id>\\S+),\\slocal AS number\\s(?P<local_as>\\d+)$'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".0", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/health_checks/templates/vyos_show_ip_bgp_summary.yaml#task:[1]", "name": "path_memory_usage", "module": "getval", "index": 1, "play_index": -1, "defined_in": "tasks/includes/health_checks/templates/vyos_show_ip_bgp_summary.yaml", "local_key": "task taskfile:tasks/includes/health_checks/templates/vyos_show_ip_bgp_summary.yaml#task:[1]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "path_memory_usage", "result": {"path": {"memory_usage": "{{ memory_usage }}", "total_entries": "{{ total_entries }}"}}}, "module_options": "'^Peers\\s(?P<total_entries>\\d+),\\susing\\s(?P<memory_usage>\\S+)'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".1", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/health_checks/templates/vyos_show_ip_bgp_summary.yaml#task:[2]", "name": "neighbors", "module": "getval", "index": 2, "play_index": -1, "defined_in": "tasks/includes/health_checks/templates/vyos_show_ip_bgp_summary.yaml", "local_key": "task taskfile:tasks/includes/health_checks/templates/vyos_show_ip_bgp_summary.yaml#task:[2]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "neighbors", "result": {"neighbors": [{"peer": "{{ peer }}", "version": "{{ version }}", "peer_as": "{{ peer_as }}", "msg_rcvd": "{{ msg_rcvd }}", "msg_sent": "{{ msg_sent }}", "bgp_table_version": "{{ bgp_table_version }}", "input_queue": "{{ input_queue }}", "output_queue": "{{ output_queue }}", "uptime": "{{ uptime }}", "peer_state": "{{ peer_state }}"}]}}, "module_options": "'^(?P<peer>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\s+(?P<version>\\d+)\\s+(?P<peer_as>\\d+)\\s+(?P<msg_rcvd>\\d+)\\s+(?P<msg_sent>\\d+)\\s+(?P<bgp_table_version>\\d+)\\s+(?P<input_queue>\\d+)\\s+(?P<output_queue>\\d+)\\s+(?P<uptime>\\S+)\\s+(?P<peer_state>\\S+)'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".2", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/health_checks/templates/iosxr_show_bgp_neighbors.yaml#task:[0]", "name": "router_id", "module": "getval", "index": 0, "play_index": -1, "defined_in": "tasks/includes/health_checks/templates/iosxr_show_bgp_neighbors.yaml", "local_key": "task taskfile:tasks/includes/health_checks/templates/iosxr_show_bgp_neighbors.yaml#task:[0]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "router_id", "result": {"router_id": "{{ router_id }}", "local_as": "{{ local_as }}"}}, "module_options": "'BGP router identifier\\s(?P<router_id>\\S+),\\slocal AS number\\s(?P<local_as>\\d+)$'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".0", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/health_checks/templates/iosxr_show_bgp_neighbors.yaml#task:[1]", "name": "bgp_table_version", "module": "getval", "index": 1, "play_index": -1, "defined_in": "tasks/includes/health_checks/templates/iosxr_show_bgp_neighbors.yaml", "local_key": "task taskfile:tasks/includes/health_checks/templates/iosxr_show_bgp_neighbors.yaml#task:[1]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "bgp_table_version", "result": {"bgp_table_version": "{{ table_version }}", "route_table_version": "{{ route_table_version }}"}}, "module_options": "'BGP table version is\\s(?P<table_version>\\d+),(.*)(?P<route_table_version>\\d+)'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".1", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/health_checks/templates/iosxr_show_bgp_neighbors.yaml#task:[2]", "name": "path_memory_usage", "module": "getval", "index": 2, "play_index": -1, "defined_in": "tasks/includes/health_checks/templates/iosxr_show_bgp_neighbors.yaml", "local_key": "task taskfile:tasks/includes/health_checks/templates/iosxr_show_bgp_neighbors.yaml#task:[2]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "path_memory_usage", "result": {"path": {"memory_usage": "{{ memory_usage }}", "total_entries": "{{ total_entries }}"}}}, "module_options": "'(?P<total_entries>\\d+)\\snetwork entries using(\\s(?P<memory_usage>\\d+))'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".2", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/includes/health_checks/templates/iosxr_show_bgp_neighbors.yaml#task:[3]", "name": "neighbors", "module": "getval", "index": 3, "play_index": -1, "defined_in": "tasks/includes/health_checks/templates/iosxr_show_bgp_neighbors.yaml", "local_key": "task taskfile:tasks/includes/health_checks/templates/iosxr_show_bgp_neighbors.yaml#task:[3]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "neighbors", "result": {"neighbors": [{"peer": "{{ peer }}", "version": "{{ version }}", "peer_as": "{{ peer_as }}", "msg_rcvd": "{{ msg_rcvd }}", "msg_sent": "{{ msg_sent }}", "bgp_table_version": "{{ bgp_table_version }}", "input_queue": "{{ input_queue }}", "output_queue": "{{ output_queue }}", "uptime": "{{ uptime }}", "peer_state": "{{ peer_state }}"}]}}, "module_options": "'^(?P<peer>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\s+(?P<version>\\d+)\\s+(?P<peer_as>\\d+)\\s+(?P<msg_rcvd>\\d+)\\s+(?P<msg_sent>\\d+)\\s+(?P<bgp_table_version>\\d+)\\s+(?P<input_queue>\\d+)\\s+(?P<output_queue>\\d+)\\s+(?P<uptime>\\S+)\\s+(?P<peer_state>\\S+)'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".3", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/health_checks/iosxr.yaml#task:[0]", "name": "Parse bgp summary", "module": "ansible.utils.cli_parse", "index": 0, "play_index": -1, "defined_in": "tasks/health_checks/iosxr.yaml", "local_key": "task taskfile:tasks/health_checks/iosxr.yaml#task:[0]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "Parse bgp summary"}, "module_options": {"command": "show bgp summary", "parser": {"name": "ansible.netcommon.content_templates"}, "set_fact": "bgp_health"}, "executable": "ansible.utils.cli_parse", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "- name: Parse bgp summary\n  ansible.utils.cli_parse:\n    command: \"show bgp summary\"\n    parser:\n      name: ansible.netcommon.content_templates\n    set_fact: bgp_health", "line_num_in_file": [2, 7], "jsonpath": ".0", "resolved_name": "", "possible_candidates": [{"py/tuple": ["ansible.utils.cli_parse", {"type": "collection", "name": "ansible.utils", "version": "2.9.0", "hash": "8f503cdb7103efbb9f97f2fe9a47027613c74cc85f3232230c895fbd9cf7afce"}]}], "module_info": {"collection": "ansible.utils", "short_name": "cli_parse", "fqcn": "ansible.utils.cli_parse", "key": "module collection:ansible.utils#module:ansible.utils.cli_parse"}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/health_checks/nxos.yaml#task:[0]", "name": "Parse bgp summary", "module": "ansible.utils.cli_parse", "index": 0, "play_index": -1, "defined_in": "tasks/health_checks/nxos.yaml", "local_key": "task taskfile:tasks/health_checks/nxos.yaml#task:[0]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "Parse bgp summary"}, "module_options": {"command": "show ip bgp summary", "parser": {"name": "ansible.netcommon.content_templates"}, "set_fact": "bgp_health"}, "executable": "ansible.utils.cli_parse", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "- name: Parse bgp summary\n  ansible.utils.cli_parse:\n    command: \"show ip bgp summary\"\n    parser:\n      name: ansible.netcommon.content_templates\n    set_fact: bgp_health", "line_num_in_file": [2, 7], "jsonpath": ".0", "resolved_name": "", "possible_candidates": [{"py/tuple": ["ansible.utils.cli_parse", {"type": "collection", "name": "ansible.utils", "version": "2.9.0", "hash": "8f503cdb7103efbb9f97f2fe9a47027613c74cc85f3232230c895fbd9cf7afce"}]}], "module_info": {"collection": "ansible.utils", "short_name": "cli_parse", "fqcn": "ansible.utils.cli_parse", "key": "module collection:ansible.utils#module:ansible.utils.cli_parse"}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/health_checks/junos.yaml#task:[0]", "name": "Parse bgp summary", "module": "ansible.utils.cli_parse", "index": 0, "play_index": -1, "defined_in": "tasks/health_checks/junos.yaml", "local_key": "task taskfile:tasks/health_checks/junos.yaml#task:[0]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "Parse bgp summary"}, "module_options": {"command": "show bgp summary", "parser": {"name": "ansible.netcommon.content_templates"}, "set_fact": "bgp_health"}, "executable": "ansible.utils.cli_parse", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "- name: Parse bgp summary\n  ansible.utils.cli_parse:\n    command: \"show bgp summary\"\n    parser:\n      name: ansible.netcommon.content_templates\n    set_fact: bgp_health", "line_num_in_file": [2, 9], "jsonpath": ".0", "resolved_name": "", "possible_candidates": [{"py/tuple": ["ansible.utils.cli_parse", {"type": "collection", "name": "ansible.utils", "version": "2.9.0", "hash": "8f503cdb7103efbb9f97f2fe9a47027613c74cc85f3232230c895fbd9cf7afce"}]}], "module_info": {"collection": "ansible.utils", "short_name": "cli_parse", "fqcn": "ansible.utils.cli_parse", "key": "module collection:ansible.utils#module:ansible.utils.cli_parse"}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/health_checks/junos.yaml#task:[1]", "name": "Show Summary facts", "module": "debug", "index": 1, "play_index": -1, "defined_in": "tasks/health_checks/junos.yaml", "local_key": "task taskfile:tasks/health_checks/junos.yaml#task:[1]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "Show Summary facts"}, "module_options": {"msg": "{{ bgp_health }}"}, "executable": "debug", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "- name: Show Summary facts\n  debug:\n    msg: \"{{ bgp_health }}\"", "line_num_in_file": [10, 12], "jsonpath": ".1", "resolved_name": "ansible.builtin.debug", "possible_candidates": [], "module_info": {"collection": "ansible.builtin", "short_name": "debug", "fqcn": "ansible.builtin.debug", "key": "module collection:ansible.builtin#module:ansible.builtin.debug"}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/health_checks/vyos.yaml#task:[0]", "name": "Parse bgp summary", "module": "cli_parse", "index": 0, "play_index": -1, "defined_in": "tasks/health_checks/vyos.yaml", "local_key": "task taskfile:tasks/health_checks/vyos.yaml#task:[0]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "Parse bgp summary"}, "module_options": {"command": "show ip bgp summary", "parser": {"name": "ansible.netcommon.content_templates"}, "set_fact": "bgp_health"}, "executable": "cli_parse", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "- name: Parse bgp summary\n  cli_parse:\n    command: \"show ip bgp summary\"\n    parser:\n      name: ansible.netcommon.content_templates\n    set_fact: bgp_health", "line_num_in_file": [2, 7], "jsonpath": ".0", "resolved_name": "", "possible_candidates": [{"py/tuple": ["ansible.utils.cli_parse", {"type": "collection", "name": "ansible.utils", "version": "2.9.0", "hash": "8f503cdb7103efbb9f97f2fe9a47027613c74cc85f3232230c895fbd9cf7afce"}]}], "module_info": {"collection": "ansible.utils", "short_name": "cli_parse", "fqcn": "ansible.utils.cli_parse", "key": "module collection:ansible.utils#module:ansible.utils.cli_parse"}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/health_checks/ios.yaml#task:[0]", "name": "Parse bgp summary", "module": "ansible.utils.cli_parse", "index": 0, "play_index": -1, "defined_in": "tasks/health_checks/ios.yaml", "local_key": "task taskfile:tasks/health_checks/ios.yaml#task:[0]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "Parse bgp summary"}, "module_options": {"command": "show bgp summary", "parser": {"name": "ansible.netcommon.content_templates"}, "set_fact": "bgp_health"}, "executable": "ansible.utils.cli_parse", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "- name: Parse bgp summary\n  ansible.utils.cli_parse:\n    command: \"show bgp summary\"\n    parser:\n      name: ansible.netcommon.content_templates\n    set_fact: bgp_health", "line_num_in_file": [2, 7], "jsonpath": ".0", "resolved_name": "", "possible_candidates": [{"py/tuple": ["ansible.utils.cli_parse", {"type": "collection", "name": "ansible.utils", "version": "2.9.0", "hash": "8f503cdb7103efbb9f97f2fe9a47027613c74cc85f3232230c895fbd9cf7afce"}]}], "module_info": {"collection": "ansible.utils", "short_name": "cli_parse", "fqcn": "ansible.utils.cli_parse", "key": "module collection:ansible.utils#module:ansible.utils.cli_parse"}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/health_checks/eos.yaml#task:[0]", "name": "Parse bgp summary", "module": "ansible.utils.cli_parse", "index": 0, "play_index": -1, "defined_in": "tasks/health_checks/eos.yaml", "local_key": "task taskfile:tasks/health_checks/eos.yaml#task:[0]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "Parse bgp summary"}, "module_options": {"command": "show ip bgp summary", "parser": {"name": "ansible.netcommon.content_templates"}, "set_fact": "bgp_health"}, "executable": "ansible.utils.cli_parse", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "- name: Parse bgp summary\n  ansible.utils.cli_parse:\n    command: \"show ip bgp summary\"\n    parser:\n      name: ansible.netcommon.content_templates\n    set_fact: bgp_health", "line_num_in_file": [2, 7], "jsonpath": ".0", "resolved_name": "", "possible_candidates": [{"py/tuple": ["ansible.utils.cli_parse", {"type": "collection", "name": "ansible.utils", "version": "2.9.0", "hash": "8f503cdb7103efbb9f97f2fe9a47027613c74cc85f3232230c895fbd9cf7afce"}]}], "module_info": {"collection": "ansible.utils", "short_name": "cli_parse", "fqcn": "ansible.utils.cli_parse", "key": "module collection:ansible.utils#module:ansible.utils.cli_parse"}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/health_checks/templates/iosxr_show_bgp_summary.yaml#task:[0]", "name": "router_id", "module": "getval", "index": 0, "play_index": -1, "defined_in": "tasks/health_checks/templates/iosxr_show_bgp_summary.yaml", "local_key": "task taskfile:tasks/health_checks/templates/iosxr_show_bgp_summary.yaml#task:[0]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "router_id", "result": {"router_id": "{{ router_id }}", "local_as": "{{ local_as }}"}}, "module_options": "'BGP router identifier\\s(?P<router_id>\\S+),\\slocal AS number\\s(?P<local_as>\\d+)$'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".0", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/health_checks/templates/iosxr_show_bgp_summary.yaml#task:[1]", "name": "generic_scan_interval", "module": "getval", "index": 1, "play_index": -1, "defined_in": "tasks/health_checks/templates/iosxr_show_bgp_summary.yaml", "local_key": "task taskfile:tasks/health_checks/templates/iosxr_show_bgp_summary.yaml#task:[1]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "generic_scan_interval", "result": {"generic_scan_interval": "{{ scan_interval}}"}}, "module_options": "'BGP gerneric scan interval\\s(?P<scan_interval>\\d+)$'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".1", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/health_checks/templates/iosxr_show_bgp_summary.yaml#task:[2]", "name": "non_stop_routing", "module": "getval", "index": 2, "play_index": -1, "defined_in": "tasks/health_checks/templates/iosxr_show_bgp_summary.yaml", "local_key": "task taskfile:tasks/health_checks/templates/iosxr_show_bgp_summary.yaml#task:[2]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "non_stop_routing", "result": {"non_stop_routing": "{{ non_stop_routing }}"}}, "module_options": "'Non-stop routing is\\s(?P<non_stop_routing>\\S+)$'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".2", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/health_checks/templates/iosxr_show_bgp_summary.yaml#task:[3]", "name": "bgp_table_version", "module": "getval", "index": 3, "play_index": -1, "defined_in": "tasks/health_checks/templates/iosxr_show_bgp_summary.yaml", "local_key": "task taskfile:tasks/health_checks/templates/iosxr_show_bgp_summary.yaml#task:[3]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "bgp_table_version", "result": {"bgp_table_version": "{{ table_version }}", "route_table_version": "{{ route_table_version }}"}}, "module_options": "'BGP table version is\\s(?P<table_version>\\d+),(.*)(?P<route_table_version>\\d+)'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".3", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/health_checks/templates/iosxr_show_bgp_summary.yaml#task:[4]", "name": "bgp_table_state", "module": "getval", "index": 4, "play_index": -1, "defined_in": "tasks/health_checks/templates/iosxr_show_bgp_summary.yaml", "local_key": "task taskfile:tasks/health_checks/templates/iosxr_show_bgp_summary.yaml#task:[4]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "bgp_table_state", "result": {"bgp_table_state": "{{ table_state }}"}}, "module_options": "'BGP table state:\\s(?P<table_state>\\S+)$'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".4", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/health_checks/templates/iosxr_show_bgp_summary.yaml#task:[5]", "name": "path_memory_usage", "module": "getval", "index": 5, "play_index": -1, "defined_in": "tasks/health_checks/templates/iosxr_show_bgp_summary.yaml", "local_key": "task taskfile:tasks/health_checks/templates/iosxr_show_bgp_summary.yaml#task:[5]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "path_memory_usage", "result": {"path": {"memory_usage": "{{ memory_usage }}", "total_entries": "{{ total_entries }}"}}}, "module_options": "'(?P<total_entries>\\d+)\\snetwork entries using(\\s(?P<memory_usage>\\d+))'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".5", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/health_checks/templates/iosxr_show_bgp_summary.yaml#task:[6]", "name": "neighbors", "module": "getval", "index": 6, "play_index": -1, "defined_in": "tasks/health_checks/templates/iosxr_show_bgp_summary.yaml", "local_key": "task taskfile:tasks/health_checks/templates/iosxr_show_bgp_summary.yaml#task:[6]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "neighbors", "result": {"neighbors": [{"peer": "{{ peer }}", "version": "{{ version }}", "peer_as": "{{ peer_as }}", "msg_rcvd": "{{ msg_rcvd }}", "msg_sent": "{{ msg_sent }}", "bgp_table_version": "{{ bgp_table_version }}", "input_queue": "{{ input_queue }}", "output_queue": "{{ output_queue }}", "uptime": "{{ uptime }}", "peer_state": "{{ peer_state }}"}]}}, "module_options": "'^(?P<peer>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\s+(?P<version>\\d+)\\s+(?P<peer_as>\\d+)\\s+(?P<msg_rcvd>\\d+)\\s+(?P<msg_sent>\\d+)\\s+(?P<bgp_table_version>\\d+)\\s+(?P<input_queue>\\d+)\\s+(?P<output_queue>\\d+)\\s+(?P<uptime>\\S+)\\s+(?P<peer_state>\\S+)'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".6", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/health_checks/templates/eos_show_ip_bgp_summary.yaml#task:[0]", "name": "router_id", "module": "getval", "index": 0, "play_index": -1, "defined_in": "tasks/health_checks/templates/eos_show_ip_bgp_summary.yaml", "local_key": "task taskfile:tasks/health_checks/templates/eos_show_ip_bgp_summary.yaml#task:[0]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "router_id", "result": {"router_id": "{{ router_id }}", "local_as": "{{ local_as }}"}}, "module_options": "'BGP router identifier\\s(?P<router_id>\\S+),\\slocal AS number\\s(?P<local_as>\\d+)$'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".0", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/health_checks/templates/eos_show_ip_bgp_summary.yaml#task:[1]", "name": "bgp_table_version", "module": "getval", "index": 1, "play_index": -1, "defined_in": "tasks/health_checks/templates/eos_show_ip_bgp_summary.yaml", "local_key": "task taskfile:tasks/health_checks/templates/eos_show_ip_bgp_summary.yaml#task:[1]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "bgp_table_version", "result": {"bgp_table_version": "{{ table_version }}", "route_table_version": "{{ route_table_version }}"}}, "module_options": "'BGP table version is\\s(?P<table_version>\\d+),(.*)(?P<route_table_version>\\d+)'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".1", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/health_checks/templates/eos_show_ip_bgp_summary.yaml#task:[2]", "name": "path_memory_usage", "module": "getval", "index": 2, "play_index": -1, "defined_in": "tasks/health_checks/templates/eos_show_ip_bgp_summary.yaml", "local_key": "task taskfile:tasks/health_checks/templates/eos_show_ip_bgp_summary.yaml#task:[2]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "path_memory_usage", "result": {"path": {"memory_usage": "{{ memory_usage }}", "total_entries": "{{ total_entries }}"}}}, "module_options": "'(?P<total_entries>\\d+)\\snetwork entries using(\\s(?P<memory_usage>\\d+))'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".2", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/health_checks/templates/eos_show_ip_bgp_summary.yaml#task:[3]", "name": "neighbors", "module": "getval", "index": 3, "play_index": -1, "defined_in": "tasks/health_checks/templates/eos_show_ip_bgp_summary.yaml", "local_key": "task taskfile:tasks/health_checks/templates/eos_show_ip_bgp_summary.yaml#task:[3]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "neighbors", "result": {"neighbors": [{"peer": "{{ peer }}", "version": "{{ version }}", "peer_as": "{{ peer_as }}", "msg_rcvd": "{{ msg_rcvd }}", "msg_sent": "{{ msg_sent }}", "bgp_table_version": "{{ bgp_table_version }}", "input_queue": "{{ input_queue }}", "output_queue": "{{ output_queue }}", "uptime": "{{ uptime }}", "peer_state": "{{ peer_state }}"}]}}, "module_options": "'^(?P<peer>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\s+(?P<version>\\d+)\\s+(?P<peer_as>\\d+)\\s+(?P<msg_rcvd>\\d+)\\s+(?P<msg_sent>\\d+)\\s+(?P<bgp_table_version>\\d+)\\s+(?P<input_queue>\\d+)\\s+(?P<output_queue>\\d+)\\s+(?P<uptime>\\S+)\\s+(?P<peer_state>\\S+)'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".3", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/health_checks/templates/junos_show_bgp_summary.yaml#task:[0]", "name": "router_id", "module": "getval", "index": 0, "play_index": -1, "defined_in": "tasks/health_checks/templates/junos_show_bgp_summary.yaml", "local_key": "task taskfile:tasks/health_checks/templates/junos_show_bgp_summary.yaml#task:[0]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "router_id", "result": {"router_id": "{{ router_id }}", "local_as": "{{ local_as }}"}}, "module_options": "'BGP router identifier\\s(?P<router_id>\\S+),\\slocal AS number\\s(?P<local_as>\\d+)'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".0", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/health_checks/templates/junos_show_bgp_summary.yaml#task:[1]", "name": "bgp_table_version", "module": "getval", "index": 1, "play_index": -1, "defined_in": "tasks/health_checks/templates/junos_show_bgp_summary.yaml", "local_key": "task taskfile:tasks/health_checks/templates/junos_show_bgp_summary.yaml#task:[1]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "bgp_table_version", "result": {"bgp_table_version": "{{ table_version }}", "rout_table_version": "{{ route_table_version }}"}}, "module_options": "'BGP table version is\\s(?P<table_version>\\d+),(.*)(?P<route_table_version>\\d+)'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".1", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/health_checks/templates/junos_show_bgp_summary.yaml#task:[2]", "name": "path_memory_usage", "module": "getval", "index": 2, "play_index": -1, "defined_in": "tasks/health_checks/templates/junos_show_bgp_summary.yaml", "local_key": "task taskfile:tasks/health_checks/templates/junos_show_bgp_summary.yaml#task:[2]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "path_memory_usage", "result": {"path": {"memory_usage": "{{ memory_usage }}", "total_entries": "{{ total_entries }}"}}}, "module_options": "'(?P<total_entries>\\d+)\\snetwork entries using(\\s(?P<memory_usage>\\d+))'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".2", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/health_checks/templates/junos_show_bgp_summary.yaml#task:[3]", "name": "neighbors", "module": "getval", "index": 3, "play_index": -1, "defined_in": "tasks/health_checks/templates/junos_show_bgp_summary.yaml", "local_key": "task taskfile:tasks/health_checks/templates/junos_show_bgp_summary.yaml#task:[3]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "neighbors", "result": {"neighbors": [{"peer": "{{ peer }}", "peer_as": "{{ peer_as }}", "msg_rcvd": "{{ msg_rcvd }}", "msg_sent": "{{ msg_sent }}", "output_queue": "{{ output_queue }}", "uptime": "{{ uptime }}", "flaps": "{{ flaps }}", "peer_state": "{{ peer_state }}"}]}}, "module_options": "'^(?P<peer>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\s+(?P<peer_as>\\d+)\\s+(?P<msg_rcvd>\\d+)\\s+(?P<msg_sent>\\d+)\\s+(?P<output_queue>\\d+)\\s+(?P<flaps>\\d+)\\s+(?P<uptime>\\S+)\\s+(?P<peer_state>\\S+)'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".3", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/health_checks/templates/ios_show_bgp_summary.yaml#task:[0]", "name": "router_id", "module": "getval", "index": 0, "play_index": -1, "defined_in": "tasks/health_checks/templates/ios_show_bgp_summary.yaml", "local_key": "task taskfile:tasks/health_checks/templates/ios_show_bgp_summary.yaml#task:[0]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "router_id", "result": {"router_id": "{{ router_id }}", "local_as": "{{ local_as }}"}}, "module_options": "'BGP router identifier\\s(?P<router_id>\\S+),\\slocal AS number\\s(?P<local_as>\\d+)$'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".0", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/health_checks/templates/ios_show_bgp_summary.yaml#task:[1]", "name": "bgp_table_version", "module": "getval", "index": 1, "play_index": -1, "defined_in": "tasks/health_checks/templates/ios_show_bgp_summary.yaml", "local_key": "task taskfile:tasks/health_checks/templates/ios_show_bgp_summary.yaml#task:[1]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "bgp_table_version", "result": {"bgp_table_version": "{{ table_version }}", "route_table_version": "{{ route_table_version }}"}}, "module_options": "'BGP table version is\\s(?P<table_version>\\d+),(.*)(?P<route_table_version>\\d+)'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".1", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/health_checks/templates/ios_show_bgp_summary.yaml#task:[2]", "name": "path_memory_usage", "module": "getval", "index": 2, "play_index": -1, "defined_in": "tasks/health_checks/templates/ios_show_bgp_summary.yaml", "local_key": "task taskfile:tasks/health_checks/templates/ios_show_bgp_summary.yaml#task:[2]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "path_memory_usage", "result": {"path": {"memory_usage": "{{ memory_usage }}", "total_entries": "{{ total_entries }}"}}}, "module_options": "'(?P<total_entries>\\d+)\\snetwork entries using(\\s(?P<memory_usage>\\d+))'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".2", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/health_checks/templates/ios_show_bgp_summary.yaml#task:[3]", "name": "neighbors", "module": "getval", "index": 3, "play_index": -1, "defined_in": "tasks/health_checks/templates/ios_show_bgp_summary.yaml", "local_key": "task taskfile:tasks/health_checks/templates/ios_show_bgp_summary.yaml#task:[3]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "neighbors", "result": {"neighbors": [{"peer": "{{ peer }}", "version": "{{ version }}", "peer_as": "{{ peer_as }}", "msg_rcvd": "{{ msg_rcvd }}", "msg_sent": "{{ msg_sent }}", "bgp_table_version": "{{ bgp_table_version }}", "input_queue": "{{ input_queue }}", "output_queue": "{{ output_queue }}", "uptime": "{{ uptime }}", "peer_state": "{{ peer_state }}"}]}}, "module_options": "'^(?P<peer>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\s+(?P<version>\\d+)\\s+(?P<peer_as>\\d+)\\s+(?P<msg_rcvd>\\d+)\\s+(?P<msg_sent>\\d+)\\s+(?P<bgp_table_version>\\d+)\\s+(?P<input_queue>\\d+)\\s+(?P<output_queue>\\d+)\\s+(?P<uptime>\\S+)\\s+(?P<peer_state>\\S+)'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".3", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/health_checks/templates/nxos_show_ip_bgp_summary.yaml#task:[0]", "name": "neighbors", "module": "getval", "index": 0, "play_index": -1, "defined_in": "tasks/health_checks/templates/nxos_show_ip_bgp_summary.yaml", "local_key": "task taskfile:tasks/health_checks/templates/nxos_show_ip_bgp_summary.yaml#task:[0]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "neighbors", "result": {"neighbors": [{"peer": "{{ peer }}", "version": "{{ version }}", "peer_as": "{{ peer_as }}", "msg_rcvd": "{{ msg_rcvd }}", "msg_sent": "{{ msg_sent }}", "bgp_table_version": "{{ bgp_table_version }}", "input_queue": "{{ input_queue }}", "output_queue": "{{ output_queue }}", "uptime": "{{ uptime }}", "peer_state": "{{ peer_state }}"}]}}, "module_options": "'^(?P<peer>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\s+(?P<version>\\d+)\\s+(?P<peer_as>\\d+)\\s+(?P<msg_rcvd>\\d+)\\s+(?P<msg_sent>\\d+)\\s+(?P<bgp_table_version>\\d+)\\s+(?P<input_queue>\\d+)\\s+(?P<output_queue>\\d+)\\s+(?P<uptime>\\S+)\\s+(?P<peer_state>\\S+)'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".0", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/health_checks/templates/vyos_show_ip_bgp_summary.yaml#task:[0]", "name": "router_id", "module": "getval", "index": 0, "play_index": -1, "defined_in": "tasks/health_checks/templates/vyos_show_ip_bgp_summary.yaml", "local_key": "task taskfile:tasks/health_checks/templates/vyos_show_ip_bgp_summary.yaml#task:[0]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "router_id", "result": {"router_id": "{{ router_id }}", "local_as": "{{ local_as }}"}}, "module_options": "'^BGP router identifier\\s(?P<router_id>\\S+),\\slocal AS number\\s(?P<local_as>\\d+)$'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".0", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/health_checks/templates/vyos_show_ip_bgp_summary.yaml#task:[1]", "name": "path_memory_usage", "module": "getval", "index": 1, "play_index": -1, "defined_in": "tasks/health_checks/templates/vyos_show_ip_bgp_summary.yaml", "local_key": "task taskfile:tasks/health_checks/templates/vyos_show_ip_bgp_summary.yaml#task:[1]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "path_memory_usage", "result": {"path": {"memory_usage": "{{ memory_usage }}", "total_entries": "{{ total_entries }}"}}}, "module_options": "'^Peers\\s(?P<total_entries>\\d+),\\susing\\s(?P<memory_usage>\\S+)'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".1", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/health_checks/templates/vyos_show_ip_bgp_summary.yaml#task:[2]", "name": "neighbors", "module": "getval", "index": 2, "play_index": -1, "defined_in": "tasks/health_checks/templates/vyos_show_ip_bgp_summary.yaml", "local_key": "task taskfile:tasks/health_checks/templates/vyos_show_ip_bgp_summary.yaml#task:[2]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "neighbors", "result": {"neighbors": [{"peer": "{{ peer }}", "version": "{{ version }}", "peer_as": "{{ peer_as }}", "msg_rcvd": "{{ msg_rcvd }}", "msg_sent": "{{ msg_sent }}", "bgp_table_version": "{{ bgp_table_version }}", "input_queue": "{{ input_queue }}", "output_queue": "{{ output_queue }}", "uptime": "{{ uptime }}", "peer_state": "{{ peer_state }}"}]}}, "module_options": "'^(?P<peer>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\s+(?P<version>\\d+)\\s+(?P<peer_as>\\d+)\\s+(?P<msg_rcvd>\\d+)\\s+(?P<msg_sent>\\d+)\\s+(?P<bgp_table_version>\\d+)\\s+(?P<input_queue>\\d+)\\s+(?P<output_queue>\\d+)\\s+(?P<uptime>\\S+)\\s+(?P<peer_state>\\S+)'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".2", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/health_checks/templates/iosxr_show_bgp_neighbors.yaml#task:[0]", "name": "router_id", "module": "getval", "index": 0, "play_index": -1, "defined_in": "tasks/health_checks/templates/iosxr_show_bgp_neighbors.yaml", "local_key": "task taskfile:tasks/health_checks/templates/iosxr_show_bgp_neighbors.yaml#task:[0]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "router_id", "result": {"router_id": "{{ router_id }}", "local_as": "{{ local_as }}"}}, "module_options": "'BGP router identifier\\s(?P<router_id>\\S+),\\slocal AS number\\s(?P<local_as>\\d+)$'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".0", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/health_checks/templates/iosxr_show_bgp_neighbors.yaml#task:[1]", "name": "bgp_table_version", "module": "getval", "index": 1, "play_index": -1, "defined_in": "tasks/health_checks/templates/iosxr_show_bgp_neighbors.yaml", "local_key": "task taskfile:tasks/health_checks/templates/iosxr_show_bgp_neighbors.yaml#task:[1]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "bgp_table_version", "result": {"bgp_table_version": "{{ table_version }}", "route_table_version": "{{ route_table_version }}"}}, "module_options": "'BGP table version is\\s(?P<table_version>\\d+),(.*)(?P<route_table_version>\\d+)'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".1", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/health_checks/templates/iosxr_show_bgp_neighbors.yaml#task:[2]", "name": "path_memory_usage", "module": "getval", "index": 2, "play_index": -1, "defined_in": "tasks/health_checks/templates/iosxr_show_bgp_neighbors.yaml", "local_key": "task taskfile:tasks/health_checks/templates/iosxr_show_bgp_neighbors.yaml#task:[2]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "path_memory_usage", "result": {"path": {"memory_usage": "{{ memory_usage }}", "total_entries": "{{ total_entries }}"}}}, "module_options": "'(?P<total_entries>\\d+)\\snetwork entries using(\\s(?P<memory_usage>\\d+))'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".2", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}, {"py/object": "ansible_risk_insight.models.Task", "type": "task", "key": "task role:run#taskfile:tasks/health_checks/templates/iosxr_show_bgp_neighbors.yaml#task:[3]", "name": "neighbors", "module": "getval", "index": 3, "play_index": -1, "defined_in": "tasks/health_checks/templates/iosxr_show_bgp_neighbors.yaml", "local_key": "task taskfile:tasks/health_checks/templates/iosxr_show_bgp_neighbors.yaml#task:[3]", "role": "run", "collection": "", "become": null, "variables": {}, "module_defaults": {}, "registered_variables": {}, "set_facts": {}, "loop": {}, "options": {"name": "neighbors", "result": {"neighbors": [{"peer": "{{ peer }}", "version": "{{ version }}", "peer_as": "{{ peer_as }}", "msg_rcvd": "{{ msg_rcvd }}", "msg_sent": "{{ msg_sent }}", "bgp_table_version": "{{ bgp_table_version }}", "input_queue": "{{ input_queue }}", "output_queue": "{{ output_queue }}", "uptime": "{{ uptime }}", "peer_state": "{{ peer_state }}"}]}}, "module_options": "'^(?P<peer>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\s+(?P<version>\\d+)\\s+(?P<peer_as>\\d+)\\s+(?P<msg_rcvd>\\d+)\\s+(?P<msg_sent>\\d+)\\s+(?P<bgp_table_version>\\d+)\\s+(?P<input_queue>\\d+)\\s+(?P<output_queue>\\d+)\\s+(?P<uptime>\\S+)\\s+(?P<peer_state>\\S+)'", "executable": "getval", "executable_type": "Module", "collections_in_play": [], "yaml_lines": "", "line_num_in_file": [], "jsonpath": ".3", "resolved_name": "", "possible_candidates": [], "module_info": {}, "include_info": {}}], "files": []}, "mappings": {"py/object": "ansible_risk_insight.models.Load", "target_name": "/Users/sjaiswal/Sumit/wisdom/botConfigRules/CloneSandbox/roles/run", "target_type": "role", "path": "CloneSandbox/roles/run", "loader_version": "0.2.8", "playbook_yaml": "", "playbook_only": true, "taskfile_yaml": "", "taskfile_only": true, "base_dir": "", "include_test_contents": false, "yaml_label_list": null, "timestamp": "2024-09-11T05:39:00.948262", "roles": [["", "role role:run"]], "playbooks": [], "taskfiles": [["handlers/main.yml", "taskfile role:run#taskfile:handlers/main.yml"]], "modules": [], "files": []}}, "ext_definitions": {}, "extra_requirements": [{"type": "module", "name": "ansible.utils.cli_parse", "defined_in": {"type": "collection", "name": "ansible.utils", "version": "2.9.0", "hash": "8f503cdb7103efbb9f97f2fe9a47027613c74cc85f3232230c895fbd9cf7afce"}, "used_in": "tasks/health_checks/eos.yaml"}], "resolve_failures": {"module": {"getval": 54}, "taskfile": {"includes/resources.yaml": 5, "./health_checks/{{ ansible_network_os.split('.')[2] }}.yaml": 1, "includes/{{operation.name}}.yaml": 1, "includes/{{ operation.name }}.yaml": 1}, "role": {"network.base.resource_manager": 7}}, "prm": {}, "report": {}, "summary_txt": "", "scan_time": "2024-09-11T05:39:01.179134"}