---
- name: provision satellite server
  amazon.aws.ec2_instance:
    network:
      assign_public_ip: true
    key_name: "{{ ec2_name_prefix }}-key"
    security_group: "{{ ec2_security_group }}"
    instance_type: "{{ ec2_info['satellite'].size[list_count|int] }}"
    image_id: "{{ sat_ami.image_id }}"
    region: "{{ ec2_region }}"
    exact_count: "{{ student_total|int }}"
    state: running
    filters:
      instance-state-name: running
      "tag:Workshop_satellite": "{{ ec2_name_prefix }}-satellite"
    tags:
      Workshop_satellite: "{{ ec2_name_prefix }}-satellite"
      Workshop: "{{ ec2_name_prefix }}"
      uuid: "{{ ec2_name_prefix }}"
      guid: "{{ ec2_name_prefix }}"
      Workshop_type: "{{ workshop_type }}"
      AWS_USERNAME: "{{ aws_user }}"
      owner: "{{ aws_user }}"
      Info: "AWS_USERNAME that provisioned this-> {{ aws_user }}"
      Ansible_Workshops: "This was provisioned through the ansible workshops provisioner"
      Students: "{{ student_total|int }}"
      short_name: "satellite"
      username: "{{ ec2_info[rhel].username }}"
      ansible-workshops: "true"
    wait: "{{ ec2_wait }}"
    vpc_subnet_id: "{{ ec2_vpc_subnet_id }}"
    volumes:
      - device_name: /dev/sda1
        ebs:
          volume_type: "{{ ec2_info['satellite'].disk_volume_type }}"
          volume_size: "{{ ec2_info['satellite'].disk_space }}"
          iops: "{{ ec2_info['satellite'].disk_iops }}"
          throughput: "{{ ec2_info['satellite'].disk_throughput }}"
          delete_on_termination: true
    ebs_optimized: "{{ ebs_optimized_capable | default(false) }}"
...
